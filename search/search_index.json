{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to gNOIc # gnoic is a gNOI CLI client that provides support for select gNOI Services: Certificate Managment . File . System . OS Check the Installation , Basic Usage or the Commands reference pages for more information. Quick start guide # CLI Installation # bash -c \" $( curl -sL https://get-gnoic.kmrd.dev ) \"","title":"Home"},{"location":"#welcome-to-gnoic","text":"gnoic is a gNOI CLI client that provides support for select gNOI Services: Certificate Managment . File . System . OS Check the Installation , Basic Usage or the Commands reference pages for more information.","title":"Welcome to gNOIc"},{"location":"#quick-start-guide","text":"","title":"Quick start guide"},{"location":"#cli-installation","text":"bash -c \" $( curl -sL https://get-gnoic.kmrd.dev ) \"","title":"CLI Installation"},{"location":"basic_usage/","text":"Basic Usage # Non RPC Commands # Tree # The tree command can be used to display gNOIc's commands tree. gnoic tree gnoic \u251c\u2500\u2500\u2500 cert \u2502 \u251c\u2500\u2500\u2500 can-generate-csr \u2502 \u251c\u2500\u2500\u2500 create-ca \u2502 \u251c\u2500\u2500\u2500 generate-csr \u2502 \u251c\u2500\u2500\u2500 get-certs \u2502 \u251c\u2500\u2500\u2500 install \u2502 \u251c\u2500\u2500\u2500 load \u2502 \u251c\u2500\u2500\u2500 load-ca \u2502 \u251c\u2500\u2500\u2500 revoke \u2502 \u2514\u2500\u2500\u2500 rotate \u251c\u2500\u2500\u2500 file \u2502 \u251c\u2500\u2500\u2500 get \u2502 \u251c\u2500\u2500\u2500 put \u2502 \u251c\u2500\u2500\u2500 remove \u2502 \u251c\u2500\u2500\u2500 stat \u2502 \u2514\u2500\u2500\u2500 transfer \u251c\u2500\u2500\u2500 help [ command ] \u251c\u2500\u2500\u2500 system \u2502 \u251c\u2500\u2500\u2500 cancel-reboot \u2502 \u251c\u2500\u2500\u2500 ping \u2502 \u251c\u2500\u2500\u2500 reboot \u2502 \u251c\u2500\u2500\u2500 reboot-status \u2502 \u251c\u2500\u2500\u2500 set-package \u2502 \u251c\u2500\u2500\u2500 switch-control-processor \u2502 \u251c\u2500\u2500\u2500 time \u2502 \u2514\u2500\u2500\u2500 traceroute \u251c\u2500\u2500\u2500 tree \u2514\u2500\u2500\u2500 version gnoic tree --flat gnoic gnoic cert gnoic cert can-generate-csr gnoic cert create-ca gnoic cert generate-csr gnoic cert get-certs gnoic cert install gnoic cert load gnoic cert load-ca gnoic cert revoke gnoic cert rotate gnoic file gnoic file get gnoic file put gnoic file remove gnoic file stat gnoic file transfer gnoic help [ command ] gnoic system gnoic system cancel-reboot gnoic system ping gnoic system reboot gnoic system reboot-status gnoic system set-package gnoic system switch-control-processor gnoic system time gnoic system traceroute gnoic tree gnoic version gnoic tree --details gnoic \u251c\u2500\u2500\u2500 cert \u2502 \u251c\u2500\u2500\u2500 can-generate-csr [ --cert-type ] [ --key-size ] [ --key-type ] \u2502 \u251c\u2500\u2500\u2500 create-ca [ --cert-out ] [ --common-name ] [ --country ] [ --email ] [ --key-out ] [ --key-size ] [ --locality ] [ --org ] [ --org-unit ] [ --postal-code ] [ --state ] [ --street-address ] [ --validity ] \u2502 \u251c\u2500\u2500\u2500 generate-csr [ --cert-type ] [ --city ] [ --common-name ] [ --country ] [ --email-id ] [ --id ] [ --ip-address ] [ --key-type ] [ --min-key-size ] [ --org ] [ --org-unit ] [ --state ] \u2502 \u251c\u2500\u2500\u2500 get-certs [ --details ] [ --id ] [ --save ] \u2502 \u251c\u2500\u2500\u2500 install [ --cert-type ] [ --city ] [ --common-name ] [ --country ] [ --email-id ] [ --id ] [ --ip-address ] [ --key-type ] [ --min-key-size ] [ --org ] [ --org-unit ] [ --print-csr ] [ --state ] [ --validity ] \u2502 \u251c\u2500\u2500\u2500 load \u2502 \u251c\u2500\u2500\u2500 load-ca \u2502 \u251c\u2500\u2500\u2500 revoke [ --all ] [ --id ] \u2502 \u2514\u2500\u2500\u2500 rotate [ --cert-type ] [ --city ] [ --common-name ] [ --country ] [ --email-id ] [ --id ] [ --ip-address ] [ --key-type ] [ --min-key-size ] [ --org ] [ --org-unit ] [ --print-csr ] [ --state ] [ --validity ] \u251c\u2500\u2500\u2500 file \u2502 \u251c\u2500\u2500\u2500 get [ --file ] [ --local-file ] [ --target-prefix ] \u2502 \u251c\u2500\u2500\u2500 put [ --chunk-size ] [ --file ] [ --hash-method ] [ --permission ] [ --remote-name ] \u2502 \u251c\u2500\u2500\u2500 remove [ --file ] \u2502 \u251c\u2500\u2500\u2500 stat [ --file ] [ --humanize ] \u2502 \u2514\u2500\u2500\u2500 transfer \u251c\u2500\u2500\u2500 help [ command ] \u251c\u2500\u2500\u2500 system \u2502 \u251c\u2500\u2500\u2500 cancel-reboot [ --message ] [ --subcomponent ] \u2502 \u251c\u2500\u2500\u2500 ping [ --count ] [ --destination ] [ --do-not-fragment ] [ --do-not-resolve ] [ --interval ] [ --protocol ] [ --size ] [ --source ] [ --wait ] \u2502 \u251c\u2500\u2500\u2500 reboot [ --delay ] [ --force ] [ --message ] [ --method ] [ --subcomponent ] \u2502 \u251c\u2500\u2500\u2500 reboot-status [ --subcomponent ] \u2502 \u251c\u2500\u2500\u2500 set-package \u2502 \u251c\u2500\u2500\u2500 switch-control-processor [ --path ] \u2502 \u251c\u2500\u2500\u2500 time \u2502 \u2514\u2500\u2500\u2500 traceroute [ --destination ] [ --do-not-fragment ] [ --do-not-resolve ] [ --initial-ttl ] [ --interval ] [ -3 | --l3protocol ] [ -4 | --l4protocol ] [ --max-ttl ] [ --size ] [ --source ] [ --wait ] \u251c\u2500\u2500\u2500 tree [ --details ] [ --flat ] [ -h | --help ] \u2514\u2500\u2500\u2500 version Cert CreateCa # [ cert create-ca ] is a non RPC related command, it is a convenience command that can be used to generate a self signed Certificate Authority for quick testing. It creates a CA key pair stored as cert.pem and key.pem Check the command reference for more flags options gnoic cert create-ca INFO [ 0000 ] CA certificate written to cert.pem INFO [ 0000 ] CA key written to key.pem gNOI RPC Commands # The following examples demonstrate the basic usage of the gnoic in a scenario where the remote target runs insecure (not TLS enabled) gNOI server. The admin:admin credentials are used to connect to the gNMI server running at 172.17.0.100:57400 address. Certificates Management gNOI service # Cert CanGenerateCSR # The [ can-generate-csr | cgc ] command acts as the client side of the Cert CanGenerateCSR RPC Check the command reference for more flags options gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin cert can-generate-csr +--------------------+------------------+ | Target Name | Can Generate CSR | +--------------------+------------------+ | 172.17.0.100:57400 | true | +--------------------+------------------+ Cert GenerateCSR # Cert GetCertificates # The [ get | get-certs ] command acts as the client side of the Cert GetCertificates RPC gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin cert get-certs +--------------------+-------+---------------------------+---------+---------+------------+----------------------+----------------------+--------------+ | Target Name | ID | Modification Time | Type | Version | Subject | Valid From | Valid Until | IP Addrs | +--------------------+-------+---------------------------+---------+---------+------------+----------------------+----------------------+--------------+ | 172.17.0.100:57400 | cert3 | 2021-05-05T13:00:46+08:00 | CT_X509 | 3 | CN=router1 | 2021-05-05T04:00:46Z | 2031-05-03T05:00:46Z | 172.17.0.100 | | 172.17.0.100:57400 | cert4 | 2021-05-05T13:00:46+08:00 | CT_X509 | 3 | CN=router1 | 2021-05-05T04:00:47Z | 2031-05-03T05:00:47Z | 172.17.0.100 | | 172.17.0.100:57400 | cert5 | 2021-05-05T13:00:48+08:00 | CT_X509 | 3 | CN=router1 | 2021-05-05T04:00:48Z | 2031-05-03T05:00:48Z | 172.17.0.100 | | 172.17.0.100:57400 | cert6 | 2021-05-05T13:00:48+08:00 | CT_X509 | 3 | CN=router1 | 2021-05-05T04:00:49Z | 2031-05-03T05:00:49Z | 172.17.0.100 | +--------------------+-------+---------------------------+---------+---------+------------+----------------------+----------------------+--------------+ Cert Install # The [ install ] command acts as the client side of the Cert Install RPC gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin \\ cert \\ --ca-cert cert.pem --ca-key key.pem \\ install \\ --ip-address 172 .17.0.100 --common-name router1 --id cert2 INFO [ 0000 ] read local CA certs INFO [ 0000 ] \"172.17.0.100:57400\" signing certificate \"CN=router1\" with the provided CA INFO [ 0000 ] \"172.17.0.100:57400\" installing certificate id = cert2 \"CN=router1\" INFO [ 0000 ] \"172.17.0.100:57400\" Install RPC successful Cert Load # Not implemented Cert LoadCa # Not implemented Cert Revoke # The [ revoke ] command acts as the client side of the Cert RevokeCertificates RPC gnoic -a 172 .17.0.100:57400 -u admin -p admin --insecure \\ cert revoke --id cert2 INFO [ 0000 ] \"172.17.0.100:57400\" certificateID = cert2 revoked successfully Multiple certificates can be revoked at once, check the command reference for more flags options Cert Rotate # The [ rotate ] command acts as the client side of the Cert Rotate RPC gnoic -a 172 .17.0.100:57400 -u admin -p admin --insecure \\ cert \\ --ca-cert cert.pem --ca-key key.pem \\ rotate --id cert2 \\ --common-name router1 \\ --org OrgInc --org-unit OrgUnit INFO [ 0000 ] read local CA certs INFO [ 0000 ] \"172.17.0.100:57400\" signing certificate \"CN=router1,OU=OrgUnit,O=OrgInc\" with the provided CA INFO [ 0000 ] \"172.17.0.100:57400\" rotating certificate id = cert2 \"CN=router1,OU=OrgUnit,O=OrgInc\" INFO [ 0000 ] \"172.17.0.100:57400\" Rotate RPC successful File gNOI Service # File Get # gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin \\ file get \\ --file cf3: \\l icense.lic INFO [ 0000 ] \"172.17.0.100:57400\" received 987 bytes INFO [ 0000 ] \"172.17.0.100:57400\" file \"cf3:license.lic\" saved File Put # gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin \\ file put \\ --file license.lic --remote-name cf3: \\l icense.lic INFO [ 0000 ] writing 987 byte ( s ) to \"172.17.0.100:57400\" INFO [ 0000 ] sending file hash to \"172.17.0.100:57400\" INFO [ 0000 ] \"172.17.0.100:57400\" file \"cf3:license.lic\" written successfully File Remove # gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin file remove --file cf3: \\l icense.lic INFO [ 0000 ] \"172.17.0.100:57400\" file \"cf3:license.lic\" removed successfully File Stat # gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin \\ file stat --file cf3: \\\\ +--------------------+-----------------------+---------------------------+------+-------+------+ | Target Name | Path | LastModified | Perm | Umask | Size | +--------------------+-----------------------+---------------------------+------+-------+------+ | 172.17.0.100:57400 | cf3:\\.ssh\\ | 2021-05-04T11:33:10+08:00 | 0777 | 0777 | 0 | | 172.17.0.100:57400 | cf3:\\CONFIG.CFG | 2021-03-31T19:19:38+08:00 | 0777 | 0777 | 0 | | 172.17.0.100:57400 | cf3:\\NVRAM.DAT | 2021-03-31T19:19:38+08:00 | 0777 | 0777 | 101 | | 172.17.0.100:57400 | cf3:\\SUPPORT\\ | 2021-03-31T20:34:48+08:00 | 0777 | 0777 | 0 | | 172.17.0.100:57400 | cf3:\\SYSLINUX\\ | 2021-03-31T19:19:38+08:00 | 0777 | 0777 | 0 | | 172.17.0.100:57400 | cf3:\\TIMOS\\ | 2021-03-31T19:19:38+08:00 | 0777 | 0777 | 0 | | 172.17.0.100:57400 | cf3:\\bof.cfg | 2021-05-04T11:34:16+08:00 | 0777 | 0777 | 636 | | 172.17.0.100:57400 | cf3:\\bof.cfg.1 | 2021-03-31T19:19:38+08:00 | 0777 | 0777 | 196 | | 172.17.0.100:57400 | cf3:\\bootlog.txt | 2021-05-04T11:35:06+08:00 | 0777 | 0777 | 4298 | | 172.17.0.100:57400 | cf3:\\bootlog_prev.txt | 2021-05-04T11:33:10+08:00 | 0777 | 0777 | 4539 | | 172.17.0.100:57400 | cf3:\\license.lic | 2021-05-04T11:33:58+08:00 | 0777 | 0777 | 987 | | 172.17.0.100:57400 | cf3:\\nvsys.info | 2021-05-04T11:35:04+08:00 | 0777 | 0777 | 315 | | 172.17.0.100:57400 | cf3:\\restcntr.txt | 2021-05-04T11:35:04+08:00 | 0777 | 0777 | 1 | | 172.17.0.100:57400 | cf3:\\system-pki\\ | 2021-05-06T11:34:24+08:00 | 0777 | 0777 | 0 | +--------------------+-----------------------+---------------------------+------+-------+------+ For a more human readable output use --humanize flag gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin \\ file stat --file cf3: --humanize +--------------------+-----------------------+----------------+------+-------+--------+ | Target Name | Path | LastModified | Perm | Umask | Size | +--------------------+-----------------------+----------------+------+-------+--------+ | 172.17.0.100:57400 | cf3:\\.ssh\\ | 2 days ago | 0777 | 0777 | 0 B | | 172.17.0.100:57400 | cf3:\\CONFIG.CFG | 1 month ago | 0777 | 0777 | 0 B | | 172.17.0.100:57400 | cf3:\\NVRAM.DAT | 1 month ago | 0777 | 0777 | 101 B | | 172.17.0.100:57400 | cf3:\\SUPPORT\\ | 1 month ago | 0777 | 0777 | 0 B | | 172.17.0.100:57400 | cf3:\\SYSLINUX\\ | 1 month ago | 0777 | 0777 | 0 B | | 172.17.0.100:57400 | cf3:\\TIMOS\\ | 1 month ago | 0777 | 0777 | 0 B | | 172.17.0.100:57400 | cf3:\\bof.cfg | 2 days ago | 0777 | 0777 | 636 B | | 172.17.0.100:57400 | cf3:\\bof.cfg.1 | 1 month ago | 0777 | 0777 | 196 B | | 172.17.0.100:57400 | cf3:\\bootlog.txt | 2 days ago | 0777 | 0777 | 4.3 kB | | 172.17.0.100:57400 | cf3:\\bootlog_prev.txt | 2 days ago | 0777 | 0777 | 4.5 kB | | 172.17.0.100:57400 | cf3:\\license.lic | 2 days ago | 0777 | 0777 | 987 B | | 172.17.0.100:57400 | cf3:\\nvsys.info | 2 days ago | 0777 | 0777 | 315 B | | 172.17.0.100:57400 | cf3:\\restcntr.txt | 2 days ago | 0777 | 0777 | 1 B | | 172.17.0.100:57400 | cf3:\\system-pki\\ | 47 minutes ago | 0777 | 0777 | 0 B | +--------------------+-----------------------+----------------+------+-------+--------+ File Transfer # Not implemented System gNOI Service # System CancelReboot # System Ping # System RebootStatus # System Reboot # System SetPackage # System SwitchControlProcessor # System Time # System Traceroute #","title":"Basic usage"},{"location":"basic_usage/#basic-usage","text":"","title":"Basic Usage"},{"location":"basic_usage/#non-rpc-commands","text":"","title":"Non RPC Commands"},{"location":"basic_usage/#tree","text":"The tree command can be used to display gNOIc's commands tree. gnoic tree gnoic \u251c\u2500\u2500\u2500 cert \u2502 \u251c\u2500\u2500\u2500 can-generate-csr \u2502 \u251c\u2500\u2500\u2500 create-ca \u2502 \u251c\u2500\u2500\u2500 generate-csr \u2502 \u251c\u2500\u2500\u2500 get-certs \u2502 \u251c\u2500\u2500\u2500 install \u2502 \u251c\u2500\u2500\u2500 load \u2502 \u251c\u2500\u2500\u2500 load-ca \u2502 \u251c\u2500\u2500\u2500 revoke \u2502 \u2514\u2500\u2500\u2500 rotate \u251c\u2500\u2500\u2500 file \u2502 \u251c\u2500\u2500\u2500 get \u2502 \u251c\u2500\u2500\u2500 put \u2502 \u251c\u2500\u2500\u2500 remove \u2502 \u251c\u2500\u2500\u2500 stat \u2502 \u2514\u2500\u2500\u2500 transfer \u251c\u2500\u2500\u2500 help [ command ] \u251c\u2500\u2500\u2500 system \u2502 \u251c\u2500\u2500\u2500 cancel-reboot \u2502 \u251c\u2500\u2500\u2500 ping \u2502 \u251c\u2500\u2500\u2500 reboot \u2502 \u251c\u2500\u2500\u2500 reboot-status \u2502 \u251c\u2500\u2500\u2500 set-package \u2502 \u251c\u2500\u2500\u2500 switch-control-processor \u2502 \u251c\u2500\u2500\u2500 time \u2502 \u2514\u2500\u2500\u2500 traceroute \u251c\u2500\u2500\u2500 tree \u2514\u2500\u2500\u2500 version gnoic tree --flat gnoic gnoic cert gnoic cert can-generate-csr gnoic cert create-ca gnoic cert generate-csr gnoic cert get-certs gnoic cert install gnoic cert load gnoic cert load-ca gnoic cert revoke gnoic cert rotate gnoic file gnoic file get gnoic file put gnoic file remove gnoic file stat gnoic file transfer gnoic help [ command ] gnoic system gnoic system cancel-reboot gnoic system ping gnoic system reboot gnoic system reboot-status gnoic system set-package gnoic system switch-control-processor gnoic system time gnoic system traceroute gnoic tree gnoic version gnoic tree --details gnoic \u251c\u2500\u2500\u2500 cert \u2502 \u251c\u2500\u2500\u2500 can-generate-csr [ --cert-type ] [ --key-size ] [ --key-type ] \u2502 \u251c\u2500\u2500\u2500 create-ca [ --cert-out ] [ --common-name ] [ --country ] [ --email ] [ --key-out ] [ --key-size ] [ --locality ] [ --org ] [ --org-unit ] [ --postal-code ] [ --state ] [ --street-address ] [ --validity ] \u2502 \u251c\u2500\u2500\u2500 generate-csr [ --cert-type ] [ --city ] [ --common-name ] [ --country ] [ --email-id ] [ --id ] [ --ip-address ] [ --key-type ] [ --min-key-size ] [ --org ] [ --org-unit ] [ --state ] \u2502 \u251c\u2500\u2500\u2500 get-certs [ --details ] [ --id ] [ --save ] \u2502 \u251c\u2500\u2500\u2500 install [ --cert-type ] [ --city ] [ --common-name ] [ --country ] [ --email-id ] [ --id ] [ --ip-address ] [ --key-type ] [ --min-key-size ] [ --org ] [ --org-unit ] [ --print-csr ] [ --state ] [ --validity ] \u2502 \u251c\u2500\u2500\u2500 load \u2502 \u251c\u2500\u2500\u2500 load-ca \u2502 \u251c\u2500\u2500\u2500 revoke [ --all ] [ --id ] \u2502 \u2514\u2500\u2500\u2500 rotate [ --cert-type ] [ --city ] [ --common-name ] [ --country ] [ --email-id ] [ --id ] [ --ip-address ] [ --key-type ] [ --min-key-size ] [ --org ] [ --org-unit ] [ --print-csr ] [ --state ] [ --validity ] \u251c\u2500\u2500\u2500 file \u2502 \u251c\u2500\u2500\u2500 get [ --file ] [ --local-file ] [ --target-prefix ] \u2502 \u251c\u2500\u2500\u2500 put [ --chunk-size ] [ --file ] [ --hash-method ] [ --permission ] [ --remote-name ] \u2502 \u251c\u2500\u2500\u2500 remove [ --file ] \u2502 \u251c\u2500\u2500\u2500 stat [ --file ] [ --humanize ] \u2502 \u2514\u2500\u2500\u2500 transfer \u251c\u2500\u2500\u2500 help [ command ] \u251c\u2500\u2500\u2500 system \u2502 \u251c\u2500\u2500\u2500 cancel-reboot [ --message ] [ --subcomponent ] \u2502 \u251c\u2500\u2500\u2500 ping [ --count ] [ --destination ] [ --do-not-fragment ] [ --do-not-resolve ] [ --interval ] [ --protocol ] [ --size ] [ --source ] [ --wait ] \u2502 \u251c\u2500\u2500\u2500 reboot [ --delay ] [ --force ] [ --message ] [ --method ] [ --subcomponent ] \u2502 \u251c\u2500\u2500\u2500 reboot-status [ --subcomponent ] \u2502 \u251c\u2500\u2500\u2500 set-package \u2502 \u251c\u2500\u2500\u2500 switch-control-processor [ --path ] \u2502 \u251c\u2500\u2500\u2500 time \u2502 \u2514\u2500\u2500\u2500 traceroute [ --destination ] [ --do-not-fragment ] [ --do-not-resolve ] [ --initial-ttl ] [ --interval ] [ -3 | --l3protocol ] [ -4 | --l4protocol ] [ --max-ttl ] [ --size ] [ --source ] [ --wait ] \u251c\u2500\u2500\u2500 tree [ --details ] [ --flat ] [ -h | --help ] \u2514\u2500\u2500\u2500 version","title":"Tree"},{"location":"basic_usage/#cert-createca","text":"[ cert create-ca ] is a non RPC related command, it is a convenience command that can be used to generate a self signed Certificate Authority for quick testing. It creates a CA key pair stored as cert.pem and key.pem Check the command reference for more flags options gnoic cert create-ca INFO [ 0000 ] CA certificate written to cert.pem INFO [ 0000 ] CA key written to key.pem","title":"Cert CreateCa"},{"location":"basic_usage/#gnoi-rpc-commands","text":"The following examples demonstrate the basic usage of the gnoic in a scenario where the remote target runs insecure (not TLS enabled) gNOI server. The admin:admin credentials are used to connect to the gNMI server running at 172.17.0.100:57400 address.","title":"gNOI RPC Commands"},{"location":"basic_usage/#certificates-management-gnoi-service","text":"","title":"Certificates Management gNOI service"},{"location":"basic_usage/#cert-cangeneratecsr","text":"The [ can-generate-csr | cgc ] command acts as the client side of the Cert CanGenerateCSR RPC Check the command reference for more flags options gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin cert can-generate-csr +--------------------+------------------+ | Target Name | Can Generate CSR | +--------------------+------------------+ | 172.17.0.100:57400 | true | +--------------------+------------------+","title":"Cert CanGenerateCSR"},{"location":"basic_usage/#cert-generatecsr","text":"","title":"Cert GenerateCSR"},{"location":"basic_usage/#cert-getcertificates","text":"The [ get | get-certs ] command acts as the client side of the Cert GetCertificates RPC gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin cert get-certs +--------------------+-------+---------------------------+---------+---------+------------+----------------------+----------------------+--------------+ | Target Name | ID | Modification Time | Type | Version | Subject | Valid From | Valid Until | IP Addrs | +--------------------+-------+---------------------------+---------+---------+------------+----------------------+----------------------+--------------+ | 172.17.0.100:57400 | cert3 | 2021-05-05T13:00:46+08:00 | CT_X509 | 3 | CN=router1 | 2021-05-05T04:00:46Z | 2031-05-03T05:00:46Z | 172.17.0.100 | | 172.17.0.100:57400 | cert4 | 2021-05-05T13:00:46+08:00 | CT_X509 | 3 | CN=router1 | 2021-05-05T04:00:47Z | 2031-05-03T05:00:47Z | 172.17.0.100 | | 172.17.0.100:57400 | cert5 | 2021-05-05T13:00:48+08:00 | CT_X509 | 3 | CN=router1 | 2021-05-05T04:00:48Z | 2031-05-03T05:00:48Z | 172.17.0.100 | | 172.17.0.100:57400 | cert6 | 2021-05-05T13:00:48+08:00 | CT_X509 | 3 | CN=router1 | 2021-05-05T04:00:49Z | 2031-05-03T05:00:49Z | 172.17.0.100 | +--------------------+-------+---------------------------+---------+---------+------------+----------------------+----------------------+--------------+","title":"Cert GetCertificates"},{"location":"basic_usage/#cert-install","text":"The [ install ] command acts as the client side of the Cert Install RPC gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin \\ cert \\ --ca-cert cert.pem --ca-key key.pem \\ install \\ --ip-address 172 .17.0.100 --common-name router1 --id cert2 INFO [ 0000 ] read local CA certs INFO [ 0000 ] \"172.17.0.100:57400\" signing certificate \"CN=router1\" with the provided CA INFO [ 0000 ] \"172.17.0.100:57400\" installing certificate id = cert2 \"CN=router1\" INFO [ 0000 ] \"172.17.0.100:57400\" Install RPC successful","title":"Cert Install"},{"location":"basic_usage/#cert-load","text":"Not implemented","title":"Cert Load"},{"location":"basic_usage/#cert-loadca","text":"Not implemented","title":"Cert LoadCa"},{"location":"basic_usage/#cert-revoke","text":"The [ revoke ] command acts as the client side of the Cert RevokeCertificates RPC gnoic -a 172 .17.0.100:57400 -u admin -p admin --insecure \\ cert revoke --id cert2 INFO [ 0000 ] \"172.17.0.100:57400\" certificateID = cert2 revoked successfully Multiple certificates can be revoked at once, check the command reference for more flags options","title":"Cert Revoke"},{"location":"basic_usage/#cert-rotate","text":"The [ rotate ] command acts as the client side of the Cert Rotate RPC gnoic -a 172 .17.0.100:57400 -u admin -p admin --insecure \\ cert \\ --ca-cert cert.pem --ca-key key.pem \\ rotate --id cert2 \\ --common-name router1 \\ --org OrgInc --org-unit OrgUnit INFO [ 0000 ] read local CA certs INFO [ 0000 ] \"172.17.0.100:57400\" signing certificate \"CN=router1,OU=OrgUnit,O=OrgInc\" with the provided CA INFO [ 0000 ] \"172.17.0.100:57400\" rotating certificate id = cert2 \"CN=router1,OU=OrgUnit,O=OrgInc\" INFO [ 0000 ] \"172.17.0.100:57400\" Rotate RPC successful","title":"Cert Rotate"},{"location":"basic_usage/#file-gnoi-service","text":"","title":"File gNOI Service"},{"location":"basic_usage/#file-get","text":"gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin \\ file get \\ --file cf3: \\l icense.lic INFO [ 0000 ] \"172.17.0.100:57400\" received 987 bytes INFO [ 0000 ] \"172.17.0.100:57400\" file \"cf3:license.lic\" saved","title":"File Get"},{"location":"basic_usage/#file-put","text":"gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin \\ file put \\ --file license.lic --remote-name cf3: \\l icense.lic INFO [ 0000 ] writing 987 byte ( s ) to \"172.17.0.100:57400\" INFO [ 0000 ] sending file hash to \"172.17.0.100:57400\" INFO [ 0000 ] \"172.17.0.100:57400\" file \"cf3:license.lic\" written successfully","title":"File Put"},{"location":"basic_usage/#file-remove","text":"gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin file remove --file cf3: \\l icense.lic INFO [ 0000 ] \"172.17.0.100:57400\" file \"cf3:license.lic\" removed successfully","title":"File Remove"},{"location":"basic_usage/#file-stat","text":"gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin \\ file stat --file cf3: \\\\ +--------------------+-----------------------+---------------------------+------+-------+------+ | Target Name | Path | LastModified | Perm | Umask | Size | +--------------------+-----------------------+---------------------------+------+-------+------+ | 172.17.0.100:57400 | cf3:\\.ssh\\ | 2021-05-04T11:33:10+08:00 | 0777 | 0777 | 0 | | 172.17.0.100:57400 | cf3:\\CONFIG.CFG | 2021-03-31T19:19:38+08:00 | 0777 | 0777 | 0 | | 172.17.0.100:57400 | cf3:\\NVRAM.DAT | 2021-03-31T19:19:38+08:00 | 0777 | 0777 | 101 | | 172.17.0.100:57400 | cf3:\\SUPPORT\\ | 2021-03-31T20:34:48+08:00 | 0777 | 0777 | 0 | | 172.17.0.100:57400 | cf3:\\SYSLINUX\\ | 2021-03-31T19:19:38+08:00 | 0777 | 0777 | 0 | | 172.17.0.100:57400 | cf3:\\TIMOS\\ | 2021-03-31T19:19:38+08:00 | 0777 | 0777 | 0 | | 172.17.0.100:57400 | cf3:\\bof.cfg | 2021-05-04T11:34:16+08:00 | 0777 | 0777 | 636 | | 172.17.0.100:57400 | cf3:\\bof.cfg.1 | 2021-03-31T19:19:38+08:00 | 0777 | 0777 | 196 | | 172.17.0.100:57400 | cf3:\\bootlog.txt | 2021-05-04T11:35:06+08:00 | 0777 | 0777 | 4298 | | 172.17.0.100:57400 | cf3:\\bootlog_prev.txt | 2021-05-04T11:33:10+08:00 | 0777 | 0777 | 4539 | | 172.17.0.100:57400 | cf3:\\license.lic | 2021-05-04T11:33:58+08:00 | 0777 | 0777 | 987 | | 172.17.0.100:57400 | cf3:\\nvsys.info | 2021-05-04T11:35:04+08:00 | 0777 | 0777 | 315 | | 172.17.0.100:57400 | cf3:\\restcntr.txt | 2021-05-04T11:35:04+08:00 | 0777 | 0777 | 1 | | 172.17.0.100:57400 | cf3:\\system-pki\\ | 2021-05-06T11:34:24+08:00 | 0777 | 0777 | 0 | +--------------------+-----------------------+---------------------------+------+-------+------+ For a more human readable output use --humanize flag gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin \\ file stat --file cf3: --humanize +--------------------+-----------------------+----------------+------+-------+--------+ | Target Name | Path | LastModified | Perm | Umask | Size | +--------------------+-----------------------+----------------+------+-------+--------+ | 172.17.0.100:57400 | cf3:\\.ssh\\ | 2 days ago | 0777 | 0777 | 0 B | | 172.17.0.100:57400 | cf3:\\CONFIG.CFG | 1 month ago | 0777 | 0777 | 0 B | | 172.17.0.100:57400 | cf3:\\NVRAM.DAT | 1 month ago | 0777 | 0777 | 101 B | | 172.17.0.100:57400 | cf3:\\SUPPORT\\ | 1 month ago | 0777 | 0777 | 0 B | | 172.17.0.100:57400 | cf3:\\SYSLINUX\\ | 1 month ago | 0777 | 0777 | 0 B | | 172.17.0.100:57400 | cf3:\\TIMOS\\ | 1 month ago | 0777 | 0777 | 0 B | | 172.17.0.100:57400 | cf3:\\bof.cfg | 2 days ago | 0777 | 0777 | 636 B | | 172.17.0.100:57400 | cf3:\\bof.cfg.1 | 1 month ago | 0777 | 0777 | 196 B | | 172.17.0.100:57400 | cf3:\\bootlog.txt | 2 days ago | 0777 | 0777 | 4.3 kB | | 172.17.0.100:57400 | cf3:\\bootlog_prev.txt | 2 days ago | 0777 | 0777 | 4.5 kB | | 172.17.0.100:57400 | cf3:\\license.lic | 2 days ago | 0777 | 0777 | 987 B | | 172.17.0.100:57400 | cf3:\\nvsys.info | 2 days ago | 0777 | 0777 | 315 B | | 172.17.0.100:57400 | cf3:\\restcntr.txt | 2 days ago | 0777 | 0777 | 1 B | | 172.17.0.100:57400 | cf3:\\system-pki\\ | 47 minutes ago | 0777 | 0777 | 0 B | +--------------------+-----------------------+----------------+------+-------+--------+","title":"File Stat"},{"location":"basic_usage/#file-transfer","text":"Not implemented","title":"File Transfer"},{"location":"basic_usage/#system-gnoi-service","text":"","title":"System gNOI Service"},{"location":"basic_usage/#system-cancelreboot","text":"","title":"System CancelReboot"},{"location":"basic_usage/#system-ping","text":"","title":"System Ping"},{"location":"basic_usage/#system-rebootstatus","text":"","title":"System RebootStatus"},{"location":"basic_usage/#system-reboot","text":"","title":"System Reboot"},{"location":"basic_usage/#system-setpackage","text":"","title":"System SetPackage"},{"location":"basic_usage/#system-switchcontrolprocessor","text":"","title":"System SwitchControlProcessor"},{"location":"basic_usage/#system-time","text":"","title":"System Time"},{"location":"basic_usage/#system-traceroute","text":"","title":"System Traceroute"},{"location":"changelog/","text":"","title":"Changelog"},{"location":"global_flags/","text":"Global Flags # address # The address flag [-a | --address] is used to specify the target's gNOI server address in address:port format, for e.g: 192.168.113.11:57400 Multiple target addresses can be specified, either as comma separated values: gnoic --address 192 .168.113.11:57400,192.168.113.12:57400 or by using the --address flag multiple times: gnoic -a 192 .168.113.11:57400 --address 192 .168.113.12:57400 debug # The debug flag [-d | --debug] enables the printing of extra information when sending/receiving an RPC gzip # The [--gzip] flag enables gRPC gzip compression. insecure # The insecure flag [--insecure] is used to indicate that the client wishes to establish an non-TLS enabled gRPC connection. To disable certificate validation in a TLS-enabled connection use skip-verify flag. password # The password flag [-p | --password] is used to specify the target password as part of the user credentials. If omitted, the password input prompt is used to provide the password. Note that in case multiple targets are used, all should use the same credentials. proxy-from-env # The proxy-from-env flag [--proxy-from-env] indicates that gNOIc should use the HTTP/HTTPS proxy addresses defined in the environment variables http_proxy and https_proxy to reach the targets specified using the --address flag. skip-verify # The skip verify flag [--skip-verify] indicates that the target should skip the signature verification steps, in case a secure connection is used. timeout # The timeout flag [--timeout] specifies the gRPC timeout after which the connection attempt fails. Valid formats: 10s, 1m30s, 1h. Defaults to 10s tls-ca # The TLS CA flag [--tls-ca] specifies the root certificates for verifying server certificates encoded in PEM format. tls-cert # The tls cert flag [--tls-cert] specifies the public key for the client encoded in PEM format. tls-key # The tls key flag [--tls-key] specifies the private key for the client encoded in PEM format. tls-max-version # The tls max version flag [--tls-max-version] specifies the maximum supported TLS version supported by gNOIc when creating a secure gRPC connection. tls-min-version # The tls min version flag [--tls-min-version] specifies the minimum supported TLS version supported by gNOIc when creating a secure gRPC connection. tls-version # The tls version flag [--tls-version] specifies a single supported TLS version gNOIc when creating a secure gRPC connection. This flag overwrites the previously listed flags --tls-max-version and --tls-min-version . username # The username flag [-u | --username] is used to specify the target username as part of the user credentials. If omitted, the input prompt is used to provide the username.","title":"Global flags"},{"location":"global_flags/#global-flags","text":"","title":"Global Flags"},{"location":"global_flags/#address","text":"The address flag [-a | --address] is used to specify the target's gNOI server address in address:port format, for e.g: 192.168.113.11:57400 Multiple target addresses can be specified, either as comma separated values: gnoic --address 192 .168.113.11:57400,192.168.113.12:57400 or by using the --address flag multiple times: gnoic -a 192 .168.113.11:57400 --address 192 .168.113.12:57400","title":"address"},{"location":"global_flags/#debug","text":"The debug flag [-d | --debug] enables the printing of extra information when sending/receiving an RPC","title":"debug"},{"location":"global_flags/#gzip","text":"The [--gzip] flag enables gRPC gzip compression.","title":"gzip"},{"location":"global_flags/#insecure","text":"The insecure flag [--insecure] is used to indicate that the client wishes to establish an non-TLS enabled gRPC connection. To disable certificate validation in a TLS-enabled connection use skip-verify flag.","title":"insecure"},{"location":"global_flags/#password","text":"The password flag [-p | --password] is used to specify the target password as part of the user credentials. If omitted, the password input prompt is used to provide the password. Note that in case multiple targets are used, all should use the same credentials.","title":"password"},{"location":"global_flags/#proxy-from-env","text":"The proxy-from-env flag [--proxy-from-env] indicates that gNOIc should use the HTTP/HTTPS proxy addresses defined in the environment variables http_proxy and https_proxy to reach the targets specified using the --address flag.","title":"proxy-from-env"},{"location":"global_flags/#skip-verify","text":"The skip verify flag [--skip-verify] indicates that the target should skip the signature verification steps, in case a secure connection is used.","title":"skip-verify"},{"location":"global_flags/#timeout","text":"The timeout flag [--timeout] specifies the gRPC timeout after which the connection attempt fails. Valid formats: 10s, 1m30s, 1h. Defaults to 10s","title":"timeout"},{"location":"global_flags/#tls-ca","text":"The TLS CA flag [--tls-ca] specifies the root certificates for verifying server certificates encoded in PEM format.","title":"tls-ca"},{"location":"global_flags/#tls-cert","text":"The tls cert flag [--tls-cert] specifies the public key for the client encoded in PEM format.","title":"tls-cert"},{"location":"global_flags/#tls-key","text":"The tls key flag [--tls-key] specifies the private key for the client encoded in PEM format.","title":"tls-key"},{"location":"global_flags/#tls-max-version","text":"The tls max version flag [--tls-max-version] specifies the maximum supported TLS version supported by gNOIc when creating a secure gRPC connection.","title":"tls-max-version"},{"location":"global_flags/#tls-min-version","text":"The tls min version flag [--tls-min-version] specifies the minimum supported TLS version supported by gNOIc when creating a secure gRPC connection.","title":"tls-min-version"},{"location":"global_flags/#tls-version","text":"The tls version flag [--tls-version] specifies a single supported TLS version gNOIc when creating a secure gRPC connection. This flag overwrites the previously listed flags --tls-max-version and --tls-min-version .","title":"tls-version"},{"location":"global_flags/#username","text":"The username flag [-u | --username] is used to specify the target username as part of the user credentials. If omitted, the input prompt is used to provide the username.","title":"username"},{"location":"install/","text":"Installation # gnoic is a single binary built for the Linux, Mac OS and Windows platforms distributed via Github releases . Linux/Mac OS # To download & install the latest release the following automated installation script can be used: bash -c \" $( curl -sL https://get-gnoic.kmrd.dev ) \" As a result, the latest gnoic version will be installed in the /usr/local/bin directory and the version information will be printed out. Downloading gnoic_0.0.2_darwin_x86_64.tar.gz Preparing to install gnoic 0.0.2 into /usr/local/bin gnoic installed into /usr/local/bin/gnoic version : 0.0.2 commit : 3bb2670 date : 2021-05-05T16:39:59Z gitURL : https://github.com/karimra/gnoic docs : https://gnoic.kmrd.dev Packages # Linux users running distributions with support for deb / rpm packages can install gnoic using pre-built packages: bash -c \" $( curl -sL https://get-gnoic.kmrd.dev ) \" -- --use-pkg Docker # The gnoic container image can be pulled from GitHub container registries. The tag of the image corresponds to the release version and latest tag points to the latest available release: # pull latest release from github registry docker pull ghcr.io/karimra/gnoic:latest # pull a specific release from github registry docker pull ghcr.io/karimra/gnoic:0.0.2 Example running gnoic tree command using the docker image: docker run \\ --network host \\ --rm ghcr.io/karimra/gnoic tree","title":"Installation"},{"location":"install/#installation","text":"gnoic is a single binary built for the Linux, Mac OS and Windows platforms distributed via Github releases .","title":"Installation"},{"location":"install/#linuxmac-os","text":"To download & install the latest release the following automated installation script can be used: bash -c \" $( curl -sL https://get-gnoic.kmrd.dev ) \" As a result, the latest gnoic version will be installed in the /usr/local/bin directory and the version information will be printed out. Downloading gnoic_0.0.2_darwin_x86_64.tar.gz Preparing to install gnoic 0.0.2 into /usr/local/bin gnoic installed into /usr/local/bin/gnoic version : 0.0.2 commit : 3bb2670 date : 2021-05-05T16:39:59Z gitURL : https://github.com/karimra/gnoic docs : https://gnoic.kmrd.dev","title":"Linux/Mac OS"},{"location":"install/#packages","text":"Linux users running distributions with support for deb / rpm packages can install gnoic using pre-built packages: bash -c \" $( curl -sL https://get-gnoic.kmrd.dev ) \" -- --use-pkg","title":"Packages"},{"location":"install/#docker","text":"The gnoic container image can be pulled from GitHub container registries. The tag of the image corresponds to the release version and latest tag points to the latest available release: # pull latest release from github registry docker pull ghcr.io/karimra/gnoic:latest # pull a specific release from github registry docker pull ghcr.io/karimra/gnoic:0.0.2 Example running gnoic tree command using the docker image: docker run \\ --network host \\ --rm ghcr.io/karimra/gnoic tree","title":"Docker"},{"location":"command_reference/cert/can-generate-csr/","text":"Cert CanGenerateCSR # Description # During the installation or rotation of certificates on a target the Certificate Signing Request (CSR) can be generated by either the target or the client. In order to check if a target has the ability to generate a CSR, the CanGenerate RPC is used. The can-generate-csr command takes 3 flags: cert-type : specifies the certificate type, defaults to CT_X509 key-type : specifies the key type, defaults to KT_RSA key-size :specifies the key size, defaults to 2048 Usage # gnoic [global-flags] cert can-generate-csr [local-flags] or gnoic [global-flags] cert cgc [local-flags] Flags # cert-type # The --cert-type set the certificate type the client is querying the target about the ability to generate a CSR for. key-type # The --key-type set the key type the client is querying the target about the ability to generate a CSR for. key-size # The --key-size set the key size the client is querying the target about the ability to generate a CSR for. Examples # gnoic -a r1,r2,r3 --insecure -u admin -p admin cert can-generate-csr +-------------+------------------+ | Target Name | Can Generate CSR | +-------------+------------------+ | r1:57400 | true | | r2:57400 | true | | r3:57400 | true | +-------------+------------------+","title":"can-generate-csr"},{"location":"command_reference/cert/can-generate-csr/#cert-cangeneratecsr","text":"","title":"Cert CanGenerateCSR"},{"location":"command_reference/cert/can-generate-csr/#description","text":"During the installation or rotation of certificates on a target the Certificate Signing Request (CSR) can be generated by either the target or the client. In order to check if a target has the ability to generate a CSR, the CanGenerate RPC is used. The can-generate-csr command takes 3 flags: cert-type : specifies the certificate type, defaults to CT_X509 key-type : specifies the key type, defaults to KT_RSA key-size :specifies the key size, defaults to 2048","title":"Description"},{"location":"command_reference/cert/can-generate-csr/#usage","text":"gnoic [global-flags] cert can-generate-csr [local-flags] or gnoic [global-flags] cert cgc [local-flags]","title":"Usage"},{"location":"command_reference/cert/can-generate-csr/#flags","text":"","title":"Flags"},{"location":"command_reference/cert/can-generate-csr/#cert-type","text":"The --cert-type set the certificate type the client is querying the target about the ability to generate a CSR for.","title":"cert-type"},{"location":"command_reference/cert/can-generate-csr/#key-type","text":"The --key-type set the key type the client is querying the target about the ability to generate a CSR for.","title":"key-type"},{"location":"command_reference/cert/can-generate-csr/#key-size","text":"The --key-size set the key size the client is querying the target about the ability to generate a CSR for.","title":"key-size"},{"location":"command_reference/cert/can-generate-csr/#examples","text":"gnoic -a r1,r2,r3 --insecure -u admin -p admin cert can-generate-csr +-------------+------------------+ | Target Name | Can Generate CSR | +-------------+------------------+ | r1:57400 | true | | r2:57400 | true | | r3:57400 | true | +-------------+------------------+","title":"Examples"},{"location":"command_reference/cert/create-ca/","text":"Cert CreateCa # Description # In oder to speed up testing, the create-ca command was added to generate a self-signed Certificate authority with the purpose of signing certificates that will be pushed to the targets using the install or rotate commands. The create-ca commands takes up to 13 flags that have \"smart\" defaults designed to simplify usage. Usage # gnoic [global-flags] cert create-ca [local-flags] Flags # org # The --org sets the OrganizationName part of the certificate DN (Distinguished Name) defaults to gNOIc org-unit # The --org-unit sets the OrganizationalUnit part of the certificate DN (Distinguished Name) defaults to gNOIc Certs country # The --country sets the Country part of the certificate DN (Distinguished Name) defaults to OC state # The --state sets the State part of the certificate DN (Distinguished Name) locality # The --locality sets the Locality part of the certificate DN (Distinguished Name) street-address # The --street-address sets the StreetAddress part of the certificate DN (Distinguished Name) postal-code # The --postal-code sets the PostalCode part of the certificate DN (Distinguished Name) validity # The --validity sets the validity duration of the certificate, the expected format is Golang's duration format: 1s, 10m, 1h, 87600h. defaults to 87600h (10 years) key-size # The --key-size sets the key size to be generated. defaults to 2048 email # The --email sets the Email part of the certificate DN (Distinguished Name) common-name # The --common-name sets the CommonName part of the certificate DN (Distinguished Name) key-out # The --key-out defines the path where the generated key needs will stored. defaults to key.pem cert-out # The --cert-out defines the path where the generated certificate will be stored. defaults to cert.pem Examples # gnoic cert create-ca INFO[0000] CA certificate written to cert.pem INFO[0000] CA key written to key.pem","title":"create-ca"},{"location":"command_reference/cert/create-ca/#cert-createca","text":"","title":"Cert CreateCa"},{"location":"command_reference/cert/create-ca/#description","text":"In oder to speed up testing, the create-ca command was added to generate a self-signed Certificate authority with the purpose of signing certificates that will be pushed to the targets using the install or rotate commands. The create-ca commands takes up to 13 flags that have \"smart\" defaults designed to simplify usage.","title":"Description"},{"location":"command_reference/cert/create-ca/#usage","text":"gnoic [global-flags] cert create-ca [local-flags]","title":"Usage"},{"location":"command_reference/cert/create-ca/#flags","text":"","title":"Flags"},{"location":"command_reference/cert/create-ca/#org","text":"The --org sets the OrganizationName part of the certificate DN (Distinguished Name) defaults to gNOIc","title":"org"},{"location":"command_reference/cert/create-ca/#org-unit","text":"The --org-unit sets the OrganizationalUnit part of the certificate DN (Distinguished Name) defaults to gNOIc Certs","title":"org-unit"},{"location":"command_reference/cert/create-ca/#country","text":"The --country sets the Country part of the certificate DN (Distinguished Name) defaults to OC","title":"country"},{"location":"command_reference/cert/create-ca/#state","text":"The --state sets the State part of the certificate DN (Distinguished Name)","title":"state"},{"location":"command_reference/cert/create-ca/#locality","text":"The --locality sets the Locality part of the certificate DN (Distinguished Name)","title":"locality"},{"location":"command_reference/cert/create-ca/#street-address","text":"The --street-address sets the StreetAddress part of the certificate DN (Distinguished Name)","title":"street-address"},{"location":"command_reference/cert/create-ca/#postal-code","text":"The --postal-code sets the PostalCode part of the certificate DN (Distinguished Name)","title":"postal-code"},{"location":"command_reference/cert/create-ca/#validity","text":"The --validity sets the validity duration of the certificate, the expected format is Golang's duration format: 1s, 10m, 1h, 87600h. defaults to 87600h (10 years)","title":"validity"},{"location":"command_reference/cert/create-ca/#key-size","text":"The --key-size sets the key size to be generated. defaults to 2048","title":"key-size"},{"location":"command_reference/cert/create-ca/#email","text":"The --email sets the Email part of the certificate DN (Distinguished Name)","title":"email"},{"location":"command_reference/cert/create-ca/#common-name","text":"The --common-name sets the CommonName part of the certificate DN (Distinguished Name)","title":"common-name"},{"location":"command_reference/cert/create-ca/#key-out","text":"The --key-out defines the path where the generated key needs will stored. defaults to key.pem","title":"key-out"},{"location":"command_reference/cert/create-ca/#cert-out","text":"The --cert-out defines the path where the generated certificate will be stored. defaults to cert.pem","title":"cert-out"},{"location":"command_reference/cert/create-ca/#examples","text":"gnoic cert create-ca INFO[0000] CA certificate written to cert.pem INFO[0000] CA key written to key.pem","title":"Examples"},{"location":"command_reference/cert/generate-csr/","text":"Description # Usage # Flags # Examples #","title":"generate-csr"},{"location":"command_reference/cert/generate-csr/#description","text":"","title":"Description"},{"location":"command_reference/cert/generate-csr/#usage","text":"","title":"Usage"},{"location":"command_reference/cert/generate-csr/#flags","text":"","title":"Flags"},{"location":"command_reference/cert/generate-csr/#examples","text":"","title":"Examples"},{"location":"command_reference/cert/get-certs/","text":"Cert GetCertificates # Description # The certificates installed on a target can be queries with the Cert GetCertificates RPC Using the cert get-certs command, the user can query all or some of the certificates installed on the target. The command takes 3 flags: id : certificateID which can be repeated as many times as necessary to query a subset of the certificates. details : displays each certificate's details in a format similar to the openssl cli tool. save : save each certificate in the local file system, under a directory called after the target address. Usage # gnoic [global-flags] cert get-certs [local-flags] Flags # id # The --id takes one or multiple (comma-separated) certificate IDs If not supplied, gNOIc displays all the available certificates. details # The --details flag makes gNOIc displays each certificate's details in a format similar to the openssl cli tool. save # When the --save flag is present, each certificate is saved in the local file system, under a directory called after the target address. Examples # gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin cert get-certs +--------------------+-------+---------------------------+---------+---------+------------+----------------------+----------------------+--------------+ | Target Name | ID | Modification Time | Type | Version | Subject | Valid From | Valid Until | IP Addrs | +--------------------+-------+---------------------------+---------+---------+------------+----------------------+----------------------+--------------+ | 172.17.0.100:57400 | cert3 | 2021-05-05T13:00:46+08:00 | CT_X509 | 3 | CN=router1 | 2021-05-05T04:00:46Z | 2031-05-03T05:00:46Z | 172.17.0.100 | | 172.17.0.100:57400 | cert4 | 2021-05-05T13:00:46+08:00 | CT_X509 | 3 | CN=router1 | 2021-05-05T04:00:47Z | 2031-05-03T05:00:47Z | 172.17.0.100 | | 172.17.0.100:57400 | cert5 | 2021-05-05T13:00:48+08:00 | CT_X509 | 3 | CN=router1 | 2021-05-05T04:00:48Z | 2031-05-03T05:00:48Z | 172.17.0.100 | | 172.17.0.100:57400 | cert6 | 2021-05-05T13:00:48+08:00 | CT_X509 | 3 | CN=router1 | 2021-05-05T04:00:49Z | 2031-05-03T05:00:49Z | 172.17.0.100 | +--------------------+-------+---------------------------+---------+---------+------------+----------------------+----------------------+--------------+","title":"get-certs"},{"location":"command_reference/cert/get-certs/#cert-getcertificates","text":"","title":"Cert GetCertificates"},{"location":"command_reference/cert/get-certs/#description","text":"The certificates installed on a target can be queries with the Cert GetCertificates RPC Using the cert get-certs command, the user can query all or some of the certificates installed on the target. The command takes 3 flags: id : certificateID which can be repeated as many times as necessary to query a subset of the certificates. details : displays each certificate's details in a format similar to the openssl cli tool. save : save each certificate in the local file system, under a directory called after the target address.","title":"Description"},{"location":"command_reference/cert/get-certs/#usage","text":"gnoic [global-flags] cert get-certs [local-flags]","title":"Usage"},{"location":"command_reference/cert/get-certs/#flags","text":"","title":"Flags"},{"location":"command_reference/cert/get-certs/#id","text":"The --id takes one or multiple (comma-separated) certificate IDs If not supplied, gNOIc displays all the available certificates.","title":"id"},{"location":"command_reference/cert/get-certs/#details","text":"The --details flag makes gNOIc displays each certificate's details in a format similar to the openssl cli tool.","title":"details"},{"location":"command_reference/cert/get-certs/#save","text":"When the --save flag is present, each certificate is saved in the local file system, under a directory called after the target address.","title":"save"},{"location":"command_reference/cert/get-certs/#examples","text":"gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin cert get-certs +--------------------+-------+---------------------------+---------+---------+------------+----------------------+----------------------+--------------+ | Target Name | ID | Modification Time | Type | Version | Subject | Valid From | Valid Until | IP Addrs | +--------------------+-------+---------------------------+---------+---------+------------+----------------------+----------------------+--------------+ | 172.17.0.100:57400 | cert3 | 2021-05-05T13:00:46+08:00 | CT_X509 | 3 | CN=router1 | 2021-05-05T04:00:46Z | 2031-05-03T05:00:46Z | 172.17.0.100 | | 172.17.0.100:57400 | cert4 | 2021-05-05T13:00:46+08:00 | CT_X509 | 3 | CN=router1 | 2021-05-05T04:00:47Z | 2031-05-03T05:00:47Z | 172.17.0.100 | | 172.17.0.100:57400 | cert5 | 2021-05-05T13:00:48+08:00 | CT_X509 | 3 | CN=router1 | 2021-05-05T04:00:48Z | 2031-05-03T05:00:48Z | 172.17.0.100 | | 172.17.0.100:57400 | cert6 | 2021-05-05T13:00:48+08:00 | CT_X509 | 3 | CN=router1 | 2021-05-05T04:00:49Z | 2031-05-03T05:00:49Z | 172.17.0.100 | +--------------------+-------+---------------------------+---------+---------+------------+----------------------+----------------------+--------------+","title":"Examples"},{"location":"command_reference/cert/install/","text":"Install # Description # Install will put a new Certificate on the target by creating a new CSR request and placing the new Certificate based on the CSR on the target. The new Certificate will be associated with a new Certificate ID on the target. If the target has a pre existing Certificate with the given Certificate Id, the operation fails. gNOIc supports target generated CSR as well as client side generated CSR . If the flag --gen-csr is present, gNOIc generates the certificate locally instead of relying on the Target. In the opposite case, gNOIc will check if the target supports CSR generation, using the CanGenerateCSR RPC . If the target can generate a CSR, gNOIc will rely on the target to generate a CSR. Otherwise it generates the CSR and certificate locally. The --gen-csr flag allows testing both message flows for a target that supports CSR generation. The install command acts as the client side of the Cert Install RPC and effectively installs a new certificate in 3 or 4 steps, depending on the CSR generation method: Target Generated CSR: Start a bi-directional gRPC stream. Request a CSR from the target. Sign the Certificate using the provided CA. Load the certificate into the target. Client Generated CSR: Start a bi-directional gRPC stream. Generate and Sign the Certificate using the provided CA. Load the certificate into the target. Usage # gnoic [global-flags] cert install [local-flags] Flags # cert-type # The --cert-type flag sets the desired certificate type. defaults to CT_X509 city # The --city sets the City part of the certificate DN (Distinguished Name) common-name # The --common-name sets the CommonName part of the certificate DN (Distinguished Name) country # The --country sets the Country part of the certificate DN (Distinguished Name) email-id # The --email-id sets the EmailID part of the certificate DN (Distinguished Name) gen-csr # The --gen-csr flag allows the running the install command with a locally generated certificate, as opposed to using the GenerateCSR to generate a CSR on the Target side. ip-address # The --ip-address sets an IP address to be added to the certificate as a SAN. id # The --id flag sets the desired certificate ID. key-type # The --key-type flag sets the desired key type, defaults to KT_RSA min-key-size # The --min-key-size flag sets the minimum desired key size, defaults to 1024 org # The --org sets the OrganizationName part of the certificate DN (Distinguished Name) print-csr # The --print-csr if set, gNOIc prints the CSR generated by the Target. org-unit # The --org-unit sets the OrganizationalUnit part of the certificate DN (Distinguished Name) state # The --state sets the State part of the certificate DN (Distinguished Name) validity # The --validity sets the validity duration of the certificate, the expected format is Golang's duration format: 1s, 10m, 1h, 87600h. defaults to 87600h (10 years) Examples # gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin \\ cert \\ --ca-cert cert.pem --ca-key key.pem \\ install \\ --ip-address 172 .17.0.100 --common-name router1 --id cert2 INFO [ 0000 ] read local CA certs INFO [ 0000 ] \"172.17.0.100:57400\" signing certificate \"CN=router1\" with the provided CA INFO [ 0000 ] \"172.17.0.100:57400\" installing certificate id = cert2 \"CN=router1\" INFO [ 0000 ] \"172.17.0.100:57400\" Install RPC successful","title":"install"},{"location":"command_reference/cert/install/#install","text":"","title":"Install"},{"location":"command_reference/cert/install/#description","text":"Install will put a new Certificate on the target by creating a new CSR request and placing the new Certificate based on the CSR on the target. The new Certificate will be associated with a new Certificate ID on the target. If the target has a pre existing Certificate with the given Certificate Id, the operation fails. gNOIc supports target generated CSR as well as client side generated CSR . If the flag --gen-csr is present, gNOIc generates the certificate locally instead of relying on the Target. In the opposite case, gNOIc will check if the target supports CSR generation, using the CanGenerateCSR RPC . If the target can generate a CSR, gNOIc will rely on the target to generate a CSR. Otherwise it generates the CSR and certificate locally. The --gen-csr flag allows testing both message flows for a target that supports CSR generation. The install command acts as the client side of the Cert Install RPC and effectively installs a new certificate in 3 or 4 steps, depending on the CSR generation method: Target Generated CSR: Start a bi-directional gRPC stream. Request a CSR from the target. Sign the Certificate using the provided CA. Load the certificate into the target. Client Generated CSR: Start a bi-directional gRPC stream. Generate and Sign the Certificate using the provided CA. Load the certificate into the target.","title":"Description"},{"location":"command_reference/cert/install/#usage","text":"gnoic [global-flags] cert install [local-flags]","title":"Usage"},{"location":"command_reference/cert/install/#flags","text":"","title":"Flags"},{"location":"command_reference/cert/install/#cert-type","text":"The --cert-type flag sets the desired certificate type. defaults to CT_X509","title":"cert-type"},{"location":"command_reference/cert/install/#city","text":"The --city sets the City part of the certificate DN (Distinguished Name)","title":"city"},{"location":"command_reference/cert/install/#common-name","text":"The --common-name sets the CommonName part of the certificate DN (Distinguished Name)","title":"common-name"},{"location":"command_reference/cert/install/#country","text":"The --country sets the Country part of the certificate DN (Distinguished Name)","title":"country"},{"location":"command_reference/cert/install/#email-id","text":"The --email-id sets the EmailID part of the certificate DN (Distinguished Name)","title":"email-id"},{"location":"command_reference/cert/install/#gen-csr","text":"The --gen-csr flag allows the running the install command with a locally generated certificate, as opposed to using the GenerateCSR to generate a CSR on the Target side.","title":"gen-csr"},{"location":"command_reference/cert/install/#ip-address","text":"The --ip-address sets an IP address to be added to the certificate as a SAN.","title":"ip-address"},{"location":"command_reference/cert/install/#id","text":"The --id flag sets the desired certificate ID.","title":"id"},{"location":"command_reference/cert/install/#key-type","text":"The --key-type flag sets the desired key type, defaults to KT_RSA","title":"key-type"},{"location":"command_reference/cert/install/#min-key-size","text":"The --min-key-size flag sets the minimum desired key size, defaults to 1024","title":"min-key-size"},{"location":"command_reference/cert/install/#org","text":"The --org sets the OrganizationName part of the certificate DN (Distinguished Name)","title":"org"},{"location":"command_reference/cert/install/#print-csr","text":"The --print-csr if set, gNOIc prints the CSR generated by the Target.","title":"print-csr"},{"location":"command_reference/cert/install/#org-unit","text":"The --org-unit sets the OrganizationalUnit part of the certificate DN (Distinguished Name)","title":"org-unit"},{"location":"command_reference/cert/install/#state","text":"The --state sets the State part of the certificate DN (Distinguished Name)","title":"state"},{"location":"command_reference/cert/install/#validity","text":"The --validity sets the validity duration of the certificate, the expected format is Golang's duration format: 1s, 10m, 1h, 87600h. defaults to 87600h (10 years)","title":"validity"},{"location":"command_reference/cert/install/#examples","text":"gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin \\ cert \\ --ca-cert cert.pem --ca-key key.pem \\ install \\ --ip-address 172 .17.0.100 --common-name router1 --id cert2 INFO [ 0000 ] read local CA certs INFO [ 0000 ] \"172.17.0.100:57400\" signing certificate \"CN=router1\" with the provided CA INFO [ 0000 ] \"172.17.0.100:57400\" installing certificate id = cert2 \"CN=router1\" INFO [ 0000 ] \"172.17.0.100:57400\" Install RPC successful","title":"Examples"},{"location":"command_reference/cert/load-ca/","text":"Cert LoadCa # Description # Not implemented Usage # Flags # Examples #","title":"load-ca"},{"location":"command_reference/cert/load-ca/#cert-loadca","text":"","title":"Cert LoadCa"},{"location":"command_reference/cert/load-ca/#description","text":"Not implemented","title":"Description"},{"location":"command_reference/cert/load-ca/#usage","text":"","title":"Usage"},{"location":"command_reference/cert/load-ca/#flags","text":"","title":"Flags"},{"location":"command_reference/cert/load-ca/#examples","text":"","title":"Examples"},{"location":"command_reference/cert/load/","text":"Cert Load # Description # Usage # Flags # Examples #","title":"load"},{"location":"command_reference/cert/load/#cert-load","text":"","title":"Cert Load"},{"location":"command_reference/cert/load/#description","text":"","title":"Description"},{"location":"command_reference/cert/load/#usage","text":"","title":"Usage"},{"location":"command_reference/cert/load/#flags","text":"","title":"Flags"},{"location":"command_reference/cert/load/#examples","text":"","title":"Examples"},{"location":"command_reference/cert/revoke/","text":"Cert Revoke # Description # The gNOI Revoke RPC revokes any previously installed certificates. The command revoke acts as the client side of the gNOI Cert RevokeCertificates RPC. The Command takes 2 flags: id : a repeated flag that can be used to list (comma-separated) the certificate IDs to be revoked all : if present, gNOI revokes all installed certificates. Usage # gnoic [global-flags] cert revoke [local-flags] Flags # id # The --id flag specifies the certificate(s) to be removed. It can be repeated as many times as needed or supplied with a comma-separated list of certificateIDs all # If present, gNOIC retrieves the list of certificates present on the target and revokes all of them with a single Revoke RPC. Examples # gnoic -a 172 .17.0.100:57400 -u admin -p admin --insecure \\ cert revoke --id cert2 INFO [ 0000 ] \"172.17.0.100:57400\" certificateID = cert2 revoked successfully","title":"revoke"},{"location":"command_reference/cert/revoke/#cert-revoke","text":"","title":"Cert Revoke"},{"location":"command_reference/cert/revoke/#description","text":"The gNOI Revoke RPC revokes any previously installed certificates. The command revoke acts as the client side of the gNOI Cert RevokeCertificates RPC. The Command takes 2 flags: id : a repeated flag that can be used to list (comma-separated) the certificate IDs to be revoked all : if present, gNOI revokes all installed certificates.","title":"Description"},{"location":"command_reference/cert/revoke/#usage","text":"gnoic [global-flags] cert revoke [local-flags]","title":"Usage"},{"location":"command_reference/cert/revoke/#flags","text":"","title":"Flags"},{"location":"command_reference/cert/revoke/#id","text":"The --id flag specifies the certificate(s) to be removed. It can be repeated as many times as needed or supplied with a comma-separated list of certificateIDs","title":"id"},{"location":"command_reference/cert/revoke/#all","text":"If present, gNOIC retrieves the list of certificates present on the target and revokes all of them with a single Revoke RPC.","title":"all"},{"location":"command_reference/cert/revoke/#examples","text":"gnoic -a 172 .17.0.100:57400 -u admin -p admin --insecure \\ cert revoke --id cert2 INFO [ 0000 ] \"172.17.0.100:57400\" certificateID = cert2 revoked successfully","title":"Examples"},{"location":"command_reference/cert/rotate/","text":"Cert Rotate # Description # There is sometimes a need to renew existing certificates on a target, the gNOI Cert Rotate RPC does exactly that. gNOIc supports target generated CSR as well as client side generated CSR . If the flag --gen-csr is present, gNOIc generates the certificate locally instead of relying on the Target. In the opposite case, gNOIc will check if the target supports CSR generation, using the CanGenerateCSR RPC . If the target can generate a CSR, gNOIc will rely on the target to generate a CSR. Otherwise it generates the CSR and certificate locally. The --gen-csr flag allows testing both message flows for a target that supports CSR generation. The rotate command acts as the client side of the gNOI Cert Rotate RPC and effectively renews a previously installed certificate in 3 or 4 steps, depending on the CSR generation method: Target Generated CSR: Start a bi-directional gRPC stream. Request a CSR from the target. Sign the Certificate using the provided CA. Load the certificate into the target. Client Generated CSR: Start a bi-directional gRPC stream. Generate and Sign the Certificate using the provided CA. Load the certificate into the target. Usage # gnoic [global-flags] cert rotate [local-flags] Flags # cert-type # The --cert-type flag sets the desired certificate type. defaults to CT_X509 city # The --city sets the City part of the certificate DN (Distinguished Name) common-name # The --common-name sets the CommonName part of the certificate DN (Distinguished Name) country # The --country sets the Country part of the certificate DN (Distinguished Name) email-id # The --email-id sets the EmailID part of the certificate DN (Distinguished Name) gen-csr # The --gen-csr flag allows the running the rotate command with a locally generated certificate, as opposed to using the GenerateCSR to generate a CSR on the Target side. ip-address # The --ip-address sets an IP address to be added to the certificate as a SAN. id # The --id flag sets the desired certificate ID. key-type # The --key-type flag sets the desired key type, defaults to KT_RSA min-key-size # The --min-key-size flag sets the minimum desired key size, defaults to 1024 org # The --org sets the OrganizationName part of the certificate DN (Distinguished Name) print-csr # The --print-csr if set, gNOIc prints the CSR generated by the Target. org-unit # The --org-unit sets the OrganizationalUnit part of the certificate DN (Distinguished Name) state # The --state sets the State part of the certificate DN (Distinguished Name) validity # The --validity sets the validity duration of the certificate, the expected format is Golang's duration format: 1s, 10m, 1h, 87600h. defaults to 87600h (10 years) Examples # gnoic -a 172 .17.0.100:57400 -u admin -p admin --insecure \\ cert \\ --ca-cert cert.pem --ca-key key.pem \\ rotate --id cert2 \\ --common-name router1 \\ --org OrgInc --org-unit OrgUnit INFO [ 0000 ] read local CA certs INFO [ 0000 ] \"172.17.0.100:57400\" signing certificate \"CN=router1,OU=OrgUnit,O=OrgInc\" with the provided CA INFO [ 0000 ] \"172.17.0.100:57400\" rotating certificate id = cert2 \"CN=router1,OU=OrgUnit,O=OrgInc\" INFO [ 0000 ] \"172.17.0.100:57400\" Rotate RPC successful","title":"rotate"},{"location":"command_reference/cert/rotate/#cert-rotate","text":"","title":"Cert Rotate"},{"location":"command_reference/cert/rotate/#description","text":"There is sometimes a need to renew existing certificates on a target, the gNOI Cert Rotate RPC does exactly that. gNOIc supports target generated CSR as well as client side generated CSR . If the flag --gen-csr is present, gNOIc generates the certificate locally instead of relying on the Target. In the opposite case, gNOIc will check if the target supports CSR generation, using the CanGenerateCSR RPC . If the target can generate a CSR, gNOIc will rely on the target to generate a CSR. Otherwise it generates the CSR and certificate locally. The --gen-csr flag allows testing both message flows for a target that supports CSR generation. The rotate command acts as the client side of the gNOI Cert Rotate RPC and effectively renews a previously installed certificate in 3 or 4 steps, depending on the CSR generation method: Target Generated CSR: Start a bi-directional gRPC stream. Request a CSR from the target. Sign the Certificate using the provided CA. Load the certificate into the target. Client Generated CSR: Start a bi-directional gRPC stream. Generate and Sign the Certificate using the provided CA. Load the certificate into the target.","title":"Description"},{"location":"command_reference/cert/rotate/#usage","text":"gnoic [global-flags] cert rotate [local-flags]","title":"Usage"},{"location":"command_reference/cert/rotate/#flags","text":"","title":"Flags"},{"location":"command_reference/cert/rotate/#cert-type","text":"The --cert-type flag sets the desired certificate type. defaults to CT_X509","title":"cert-type"},{"location":"command_reference/cert/rotate/#city","text":"The --city sets the City part of the certificate DN (Distinguished Name)","title":"city"},{"location":"command_reference/cert/rotate/#common-name","text":"The --common-name sets the CommonName part of the certificate DN (Distinguished Name)","title":"common-name"},{"location":"command_reference/cert/rotate/#country","text":"The --country sets the Country part of the certificate DN (Distinguished Name)","title":"country"},{"location":"command_reference/cert/rotate/#email-id","text":"The --email-id sets the EmailID part of the certificate DN (Distinguished Name)","title":"email-id"},{"location":"command_reference/cert/rotate/#gen-csr","text":"The --gen-csr flag allows the running the rotate command with a locally generated certificate, as opposed to using the GenerateCSR to generate a CSR on the Target side.","title":"gen-csr"},{"location":"command_reference/cert/rotate/#ip-address","text":"The --ip-address sets an IP address to be added to the certificate as a SAN.","title":"ip-address"},{"location":"command_reference/cert/rotate/#id","text":"The --id flag sets the desired certificate ID.","title":"id"},{"location":"command_reference/cert/rotate/#key-type","text":"The --key-type flag sets the desired key type, defaults to KT_RSA","title":"key-type"},{"location":"command_reference/cert/rotate/#min-key-size","text":"The --min-key-size flag sets the minimum desired key size, defaults to 1024","title":"min-key-size"},{"location":"command_reference/cert/rotate/#org","text":"The --org sets the OrganizationName part of the certificate DN (Distinguished Name)","title":"org"},{"location":"command_reference/cert/rotate/#print-csr","text":"The --print-csr if set, gNOIc prints the CSR generated by the Target.","title":"print-csr"},{"location":"command_reference/cert/rotate/#org-unit","text":"The --org-unit sets the OrganizationalUnit part of the certificate DN (Distinguished Name)","title":"org-unit"},{"location":"command_reference/cert/rotate/#state","text":"The --state sets the State part of the certificate DN (Distinguished Name)","title":"state"},{"location":"command_reference/cert/rotate/#validity","text":"The --validity sets the validity duration of the certificate, the expected format is Golang's duration format: 1s, 10m, 1h, 87600h. defaults to 87600h (10 years)","title":"validity"},{"location":"command_reference/cert/rotate/#examples","text":"gnoic -a 172 .17.0.100:57400 -u admin -p admin --insecure \\ cert \\ --ca-cert cert.pem --ca-key key.pem \\ rotate --id cert2 \\ --common-name router1 \\ --org OrgInc --org-unit OrgUnit INFO [ 0000 ] read local CA certs INFO [ 0000 ] \"172.17.0.100:57400\" signing certificate \"CN=router1,OU=OrgUnit,O=OrgInc\" with the provided CA INFO [ 0000 ] \"172.17.0.100:57400\" rotating certificate id = cert2 \"CN=router1,OU=OrgUnit,O=OrgInc\" INFO [ 0000 ] \"172.17.0.100:57400\" Rotate RPC successful","title":"Examples"},{"location":"command_reference/file/get/","text":"File Get # Description # The file get command allows to retrieve a file from multiple Target(s) and store it in the local system. It uses the gNOI File Get RPC , which is a server streaming RPC. After receiving the request, the Target streams the file to the client in chunks of maximum 64KB and finishes with a message containing the Hash of the file. At which point, the client should verify the Hash and save the file locally The file get command supports 3 flags: file : the file(s)/dir(s) names to be retrieved. dst : local directory name, defaults to $PWD . target-prefix : if present, gNOIc prepends the target name to the retrieved file. Usage # gnoic [global-flags] file get [local-flags] Flags # file # The --file flag sets the file(s)/dir(s) names to be retrieved. dst # The --dst flag sets the local directory name, defaults to $PWD . target-prefix # If present, the --target-prefix prepends the target name to the name the file will be stored under. Examples # gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin \\ file get \\ --file cf3: \\l icense.lic INFO [ 0000 ] \"172.17.0.100:57400\" received 987 bytes INFO [ 0000 ] \"172.17.0.100:57400\" file \"cf3:license.lic\" saved","title":"get"},{"location":"command_reference/file/get/#file-get","text":"","title":"File Get"},{"location":"command_reference/file/get/#description","text":"The file get command allows to retrieve a file from multiple Target(s) and store it in the local system. It uses the gNOI File Get RPC , which is a server streaming RPC. After receiving the request, the Target streams the file to the client in chunks of maximum 64KB and finishes with a message containing the Hash of the file. At which point, the client should verify the Hash and save the file locally The file get command supports 3 flags: file : the file(s)/dir(s) names to be retrieved. dst : local directory name, defaults to $PWD . target-prefix : if present, gNOIc prepends the target name to the retrieved file.","title":"Description"},{"location":"command_reference/file/get/#usage","text":"gnoic [global-flags] file get [local-flags]","title":"Usage"},{"location":"command_reference/file/get/#flags","text":"","title":"Flags"},{"location":"command_reference/file/get/#file","text":"The --file flag sets the file(s)/dir(s) names to be retrieved.","title":"file"},{"location":"command_reference/file/get/#dst","text":"The --dst flag sets the local directory name, defaults to $PWD .","title":"dst"},{"location":"command_reference/file/get/#target-prefix","text":"If present, the --target-prefix prepends the target name to the name the file will be stored under.","title":"target-prefix"},{"location":"command_reference/file/get/#examples","text":"gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin \\ file get \\ --file cf3: \\l icense.lic INFO [ 0000 ] \"172.17.0.100:57400\" received 987 bytes INFO [ 0000 ] \"172.17.0.100:57400\" file \"cf3:license.lic\" saved","title":"Examples"},{"location":"command_reference/file/put/","text":"File Put # Description # The file put command allows to push a file from the local system to multiple Target(s). It uses the gNOI File Put RPC , which is a client streaming RPC. The client start with open message containing the remote file name (must be an absolute path) as well as the permissions intended for the file. It continues by sending the file to the target(s) in a series of chunks of maximum 64KB and finishes with a message containing the Hash of the file. The file put command supports 5 flags: file : file to put on the target(s). dst : file/directory remote name. If --file points to a directory or multiple --file flags are set, --dst represents the destination directory, otherwise it represents the remote file name. chunk-size : chunk write size in Bytes, default (64KB) is used if set to 0. permission : file permissions, in octal format. If set to 0, the local system file permissions are used. Default: 0777 hash-method : one of MD5, SHA256 or SHA512. If another value is supplied MD5 is used. Usage # gnoic [global-flags] file put [local-flags] Flags # file # The --file defines the file remote name. dst # The dst defines the remote destination. If --file points to a directory or multiple --file flags are set, --dst represents the destination directory, otherwise it represents the remote file name. chunk-size # The --chunk-size defines the chunk size in Bytes, the default (64KB) is used if set to 0. hash-method # The --hash-method sets the method to be used to calculate the hash to be sent to the target(s) Examples # gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin \\ file put \\ --file license.lic --dst cf3: \\l icense.lic INFO [ 0000 ] writing 987 byte ( s ) to \"172.17.0.100:57400\" INFO [ 0000 ] sending file hash to \"172.17.0.100:57400\" INFO [ 0000 ] \"172.17.0.100:57400\" file \"cf3:license.lic\" written successfully","title":"put"},{"location":"command_reference/file/put/#file-put","text":"","title":"File Put"},{"location":"command_reference/file/put/#description","text":"The file put command allows to push a file from the local system to multiple Target(s). It uses the gNOI File Put RPC , which is a client streaming RPC. The client start with open message containing the remote file name (must be an absolute path) as well as the permissions intended for the file. It continues by sending the file to the target(s) in a series of chunks of maximum 64KB and finishes with a message containing the Hash of the file. The file put command supports 5 flags: file : file to put on the target(s). dst : file/directory remote name. If --file points to a directory or multiple --file flags are set, --dst represents the destination directory, otherwise it represents the remote file name. chunk-size : chunk write size in Bytes, default (64KB) is used if set to 0. permission : file permissions, in octal format. If set to 0, the local system file permissions are used. Default: 0777 hash-method : one of MD5, SHA256 or SHA512. If another value is supplied MD5 is used.","title":"Description"},{"location":"command_reference/file/put/#usage","text":"gnoic [global-flags] file put [local-flags]","title":"Usage"},{"location":"command_reference/file/put/#flags","text":"","title":"Flags"},{"location":"command_reference/file/put/#file","text":"The --file defines the file remote name.","title":"file"},{"location":"command_reference/file/put/#dst","text":"The dst defines the remote destination. If --file points to a directory or multiple --file flags are set, --dst represents the destination directory, otherwise it represents the remote file name.","title":"dst"},{"location":"command_reference/file/put/#chunk-size","text":"The --chunk-size defines the chunk size in Bytes, the default (64KB) is used if set to 0.","title":"chunk-size"},{"location":"command_reference/file/put/#hash-method","text":"The --hash-method sets the method to be used to calculate the hash to be sent to the target(s)","title":"hash-method"},{"location":"command_reference/file/put/#examples","text":"gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin \\ file put \\ --file license.lic --dst cf3: \\l icense.lic INFO [ 0000 ] writing 987 byte ( s ) to \"172.17.0.100:57400\" INFO [ 0000 ] sending file hash to \"172.17.0.100:57400\" INFO [ 0000 ] \"172.17.0.100:57400\" file \"cf3:license.lic\" written successfully","title":"Examples"},{"location":"command_reference/file/remove/","text":"File Remove # Description # The file remove command uses the gNOI File Remove RPC to remove a file from one or multiple targets. It supports one flag --path that points to a remote file or directory to be removed. In case the remote path is a directory, gnoic will walk the path recursively and remove contained files one by one. Usage # gnoic [global-flags] file remove [local-flags] Flags # path # The --path specifies the file name or directory name to removed from the target(s). Can be set multiple times. Examples # gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin file remove --path cf3: \\l icense.lic INFO [ 0000 ] \"172.17.0.100:57400\" file \"cf3:license.lic\" removed successfully","title":"remove"},{"location":"command_reference/file/remove/#file-remove","text":"","title":"File Remove"},{"location":"command_reference/file/remove/#description","text":"The file remove command uses the gNOI File Remove RPC to remove a file from one or multiple targets. It supports one flag --path that points to a remote file or directory to be removed. In case the remote path is a directory, gnoic will walk the path recursively and remove contained files one by one.","title":"Description"},{"location":"command_reference/file/remove/#usage","text":"gnoic [global-flags] file remove [local-flags]","title":"Usage"},{"location":"command_reference/file/remove/#flags","text":"","title":"Flags"},{"location":"command_reference/file/remove/#path","text":"The --path specifies the file name or directory name to removed from the target(s). Can be set multiple times.","title":"path"},{"location":"command_reference/file/remove/#examples","text":"gnoic -a 172 .17.0.100:57400 --insecure -u admin -p admin file remove --path cf3: \\l icense.lic INFO [ 0000 ] \"172.17.0.100:57400\" file \"cf3:license.lic\" removed successfully","title":"Examples"},{"location":"command_reference/file/stat/","text":"File Stat # Description # The file stat command uses the gNOI File Stat RPC to retrieve metadata about a file or a directory. It supports 3 flags: path : path(s) to get metadata about. humanize : makes some of the output data human readable, most notably dates and file sizes. recursive : recursively looks up the path subdirectories and runs a Stat RPC against them. Usage # gnoic [global-flags] file stat [local-flags] Flags # path # The --path sets the remote file/dir name to get metadata about. humanize # The --humanize flag makes some of the output data human readable, most notably dates and file sizes. recursive # The --recursive recursively looks up the path subdirectories and runs a Stat RPC against them. Examples # gnoic -a r1,r2,r3 --insecure -u admin -p admin file stat --path cf3: --humanize +-------------+---------------------------+----------------+------------+------------+--------+ | Target Name | Path | LastModified | Perm | Umask | Size | +-------------+---------------------------+----------------+------------+------------+--------+ | r1:57400 | cf3:\\system-pki\\cert1.crt | 24 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 994 B | | | cf3:\\system-pki\\cert1.key | 24 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 1.3 kB | | | cf3:\\system-pki\\cert2.crt | 22 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 994 B | | | cf3:\\system-pki\\cert2.key | 22 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 1.3 kB | | | cf3:\\system-pki\\cert3.crt | 20 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 994 B | | | cf3:\\system-pki\\cert3.key | 20 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 1.3 kB | | r2:57400 | cf3:\\system-pki\\cert1.crt | 24 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 995 B | | | cf3:\\system-pki\\cert1.key | 24 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 1.3 kB | | | cf3:\\system-pki\\cert2.crt | 22 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 995 B | | | cf3:\\system-pki\\cert2.key | 22 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 1.3 kB | | | cf3:\\system-pki\\cert3.crt | 20 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 994 B | | | cf3:\\system-pki\\cert3.key | 20 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 1.3 kB | | r3:57400 | cf3:\\system-pki\\cert1.crt | 24 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 995 B | | | cf3:\\system-pki\\cert1.key | 24 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 1.3 kB | | | cf3:\\system-pki\\cert2.crt | 22 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 995 B | | | cf3:\\system-pki\\cert2.key | 22 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 1.3 kB | | | cf3:\\system-pki\\cert3.crt | 20 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 995 B | | | cf3:\\system-pki\\cert3.key | 20 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 1.3 kB | +-------------+---------------------------+----------------+------------+------------+--------+","title":"stat"},{"location":"command_reference/file/stat/#file-stat","text":"","title":"File Stat"},{"location":"command_reference/file/stat/#description","text":"The file stat command uses the gNOI File Stat RPC to retrieve metadata about a file or a directory. It supports 3 flags: path : path(s) to get metadata about. humanize : makes some of the output data human readable, most notably dates and file sizes. recursive : recursively looks up the path subdirectories and runs a Stat RPC against them.","title":"Description"},{"location":"command_reference/file/stat/#usage","text":"gnoic [global-flags] file stat [local-flags]","title":"Usage"},{"location":"command_reference/file/stat/#flags","text":"","title":"Flags"},{"location":"command_reference/file/stat/#path","text":"The --path sets the remote file/dir name to get metadata about.","title":"path"},{"location":"command_reference/file/stat/#humanize","text":"The --humanize flag makes some of the output data human readable, most notably dates and file sizes.","title":"humanize"},{"location":"command_reference/file/stat/#recursive","text":"The --recursive recursively looks up the path subdirectories and runs a Stat RPC against them.","title":"recursive"},{"location":"command_reference/file/stat/#examples","text":"gnoic -a r1,r2,r3 --insecure -u admin -p admin file stat --path cf3: --humanize +-------------+---------------------------+----------------+------------+------------+--------+ | Target Name | Path | LastModified | Perm | Umask | Size | +-------------+---------------------------+----------------+------------+------------+--------+ | r1:57400 | cf3:\\system-pki\\cert1.crt | 24 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 994 B | | | cf3:\\system-pki\\cert1.key | 24 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 1.3 kB | | | cf3:\\system-pki\\cert2.crt | 22 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 994 B | | | cf3:\\system-pki\\cert2.key | 22 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 1.3 kB | | | cf3:\\system-pki\\cert3.crt | 20 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 994 B | | | cf3:\\system-pki\\cert3.key | 20 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 1.3 kB | | r2:57400 | cf3:\\system-pki\\cert1.crt | 24 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 995 B | | | cf3:\\system-pki\\cert1.key | 24 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 1.3 kB | | | cf3:\\system-pki\\cert2.crt | 22 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 995 B | | | cf3:\\system-pki\\cert2.key | 22 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 1.3 kB | | | cf3:\\system-pki\\cert3.crt | 20 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 994 B | | | cf3:\\system-pki\\cert3.key | 20 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 1.3 kB | | r3:57400 | cf3:\\system-pki\\cert1.crt | 24 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 995 B | | | cf3:\\system-pki\\cert1.key | 24 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 1.3 kB | | | cf3:\\system-pki\\cert2.crt | 22 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 995 B | | | cf3:\\system-pki\\cert2.key | 22 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 1.3 kB | | | cf3:\\system-pki\\cert3.crt | 20 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 995 B | | | cf3:\\system-pki\\cert3.key | 20 seconds ago | -rwxrwxrwx | -rwxrwxrwx | 1.3 kB | +-------------+---------------------------+----------------+------------+------------+--------+","title":"Examples"},{"location":"command_reference/file/transfer/","text":"File Transfer # Description # The file transfer command uses the gNOI File Transfer RPC to transfer a file from a target to a remote location. It supports 3 flags: local : the file name local to the target. remote : the remote location to which the target should transfer the file. source-address : the source address used to initiate connections from the target. Usage # gnoic [global-flags] file transfer [local-flags] Flags # local # The --local sets the local file path to be transferred from the target to the remote location. remote # The --remote flag is used to set the remote location to which the target should transfer the local file. It should include the protocol used, any credentials (if needed), the remote address and path. e.g: scp://user:pass@server.com:/path/to/file scp:/192.168.1.1:/path/to/file sftp://user:pass@server.com:/path/to/file http://user:pass@server.com/path/to/file https://user:pass@server.com/path/to/file https://server.com/path/to/file source-address # The --source-address flag sets the source address used to initiate connections from the target. It can be either an IPv4 address or an IPv6 address, depending on the connection's destination address. Examples # gnoic -a clab-gnoi-sr1 --insecure -u admin -p admin file transfer --local cf3: \\b of.cfg --remote http://admin:admin@172.100.100.1:8000/bof.cfg INFO[0000] sending file transfer request: local_path:\"cf3:bof.cfg\" remote_download:{path:\"172.100.100.1:8000/bof.cfg\" protocol:HTTP} to target \"clab-gnoi-sr1:57400\" +---------------------+-------------+----------------------------------+ | Target Name | Hash Method | Hash | +---------------------+-------------+----------------------------------+ | clab-gnoi-sr1:57400 | MD5 | ce226201074f995db2c2a88a6948fb51 | +---------------------+-------------+----------------------------------+","title":"transfer"},{"location":"command_reference/file/transfer/#file-transfer","text":"","title":"File Transfer"},{"location":"command_reference/file/transfer/#description","text":"The file transfer command uses the gNOI File Transfer RPC to transfer a file from a target to a remote location. It supports 3 flags: local : the file name local to the target. remote : the remote location to which the target should transfer the file. source-address : the source address used to initiate connections from the target.","title":"Description"},{"location":"command_reference/file/transfer/#usage","text":"gnoic [global-flags] file transfer [local-flags]","title":"Usage"},{"location":"command_reference/file/transfer/#flags","text":"","title":"Flags"},{"location":"command_reference/file/transfer/#local","text":"The --local sets the local file path to be transferred from the target to the remote location.","title":"local"},{"location":"command_reference/file/transfer/#remote","text":"The --remote flag is used to set the remote location to which the target should transfer the local file. It should include the protocol used, any credentials (if needed), the remote address and path. e.g: scp://user:pass@server.com:/path/to/file scp:/192.168.1.1:/path/to/file sftp://user:pass@server.com:/path/to/file http://user:pass@server.com/path/to/file https://user:pass@server.com/path/to/file https://server.com/path/to/file","title":"remote"},{"location":"command_reference/file/transfer/#source-address","text":"The --source-address flag sets the source address used to initiate connections from the target. It can be either an IPv4 address or an IPv6 address, depending on the connection's destination address.","title":"source-address"},{"location":"command_reference/file/transfer/#examples","text":"gnoic -a clab-gnoi-sr1 --insecure -u admin -p admin file transfer --local cf3: \\b of.cfg --remote http://admin:admin@172.100.100.1:8000/bof.cfg INFO[0000] sending file transfer request: local_path:\"cf3:bof.cfg\" remote_download:{path:\"172.100.100.1:8000/bof.cfg\" protocol:HTTP} to target \"clab-gnoi-sr1:57400\" +---------------------+-------------+----------------------------------+ | Target Name | Hash Method | Hash | +---------------------+-------------+----------------------------------+ | clab-gnoi-sr1:57400 | MD5 | ce226201074f995db2c2a88a6948fb51 | +---------------------+-------------+----------------------------------+","title":"Examples"},{"location":"command_reference/os/activate/","text":"OS Activate # Description # The os activate command sets the request OS version to be used at the next reboot. It reboots the target if the --no-boot flag is not set. It uses the gNOI OS Activate RPC , which is a unary RPC. The client sends an ActivateRequest message stating the version to be activated, if it needs to be activated on the standby supervisor and if the target should be rebooted right after setting the new active SW version. The os activate command supports 3 flags: version : The OS package version. standby : If present, the package is activated in the standby supervisor. no-reboot : If present, the target is not rebooted after setting the active SW version. Usage # gnoic [global-flags] os install [local-flags] Flags # version # The --version flag sets the package version to be transferred. standby # The --standby flag, if present, instructs the target to activate the package in the standby supervisor. no-reboot # The --no-reboot flag, if present, instructs the target to not reboot after setting the SW version as active. Examples # gnoic -a 172 .17.0.100:57400 --skip-verify -u admin -p admin \\ os activate \\ --version srlinux_22.6.0 \\ --no-reboot","title":"activate"},{"location":"command_reference/os/activate/#os-activate","text":"","title":"OS Activate"},{"location":"command_reference/os/activate/#description","text":"The os activate command sets the request OS version to be used at the next reboot. It reboots the target if the --no-boot flag is not set. It uses the gNOI OS Activate RPC , which is a unary RPC. The client sends an ActivateRequest message stating the version to be activated, if it needs to be activated on the standby supervisor and if the target should be rebooted right after setting the new active SW version. The os activate command supports 3 flags: version : The OS package version. standby : If present, the package is activated in the standby supervisor. no-reboot : If present, the target is not rebooted after setting the active SW version.","title":"Description"},{"location":"command_reference/os/activate/#usage","text":"gnoic [global-flags] os install [local-flags]","title":"Usage"},{"location":"command_reference/os/activate/#flags","text":"","title":"Flags"},{"location":"command_reference/os/activate/#version","text":"The --version flag sets the package version to be transferred.","title":"version"},{"location":"command_reference/os/activate/#standby","text":"The --standby flag, if present, instructs the target to activate the package in the standby supervisor.","title":"standby"},{"location":"command_reference/os/activate/#no-reboot","text":"The --no-reboot flag, if present, instructs the target to not reboot after setting the SW version as active.","title":"no-reboot"},{"location":"command_reference/os/activate/#examples","text":"gnoic -a 172 .17.0.100:57400 --skip-verify -u admin -p admin \\ os activate \\ --version srlinux_22.6.0 \\ --no-reboot","title":"Examples"},{"location":"command_reference/os/install/","text":"OS Install # Description # The os install command allows to transfer an OS package to the target(s). It uses the gNOI OS Install RPC , which is a bidirectional streaming RPC. The client starts by sending a TransferRequest stating the OS package version and whether the to perform the transfer with the standby supervisor as target. If the Server already has the OS package it answers with Validated . Otherwise it answers with TransferReady , at which point the client can start the actual transfer of the package by sending a stream of TransferContent messages. During the TransferContent phase, the server may send TransferProgress messages containing the number of bytes already received. Once the client is done transferring the OS package file, it sends a TransferEnd informing the target that the file transfer is done. The target Must perform a general health check to the OS package and return an InstallError message with the appropriate error type If the health check succeeds, the target must response with a Validated message. The os install command supports 4 flags: version : The OS package version. standby : If present, the package is transferred towards the standby supervisor. pkg : Local path to the package file. content-chunk-size : the maximum number of bytes to transfer in a TransferContent message, defaults to 1MB Usage # gnoic [global-flags] os install [local-flags] Flags # version # The --version flag sets the package version to be transferred. standby # The --standby flag if present, instructs the target that the package should be transferred towards the standby supervisor. pkg # The --pkg flag points to the OS package file to be transferred. content-chunk-size # The --content-chunk-size flag sets the maximum number of bytes to transfer in a TransferContent message, defaults to 1MB. Examples # gnoic -a 172 .17.0.100:57400 --skip-verify -u admin -p admin \\ os install \\ --version srlinux_22.6.0 --pkg srlinux_22.6.0.zip","title":"install"},{"location":"command_reference/os/install/#os-install","text":"","title":"OS Install"},{"location":"command_reference/os/install/#description","text":"The os install command allows to transfer an OS package to the target(s). It uses the gNOI OS Install RPC , which is a bidirectional streaming RPC. The client starts by sending a TransferRequest stating the OS package version and whether the to perform the transfer with the standby supervisor as target. If the Server already has the OS package it answers with Validated . Otherwise it answers with TransferReady , at which point the client can start the actual transfer of the package by sending a stream of TransferContent messages. During the TransferContent phase, the server may send TransferProgress messages containing the number of bytes already received. Once the client is done transferring the OS package file, it sends a TransferEnd informing the target that the file transfer is done. The target Must perform a general health check to the OS package and return an InstallError message with the appropriate error type If the health check succeeds, the target must response with a Validated message. The os install command supports 4 flags: version : The OS package version. standby : If present, the package is transferred towards the standby supervisor. pkg : Local path to the package file. content-chunk-size : the maximum number of bytes to transfer in a TransferContent message, defaults to 1MB","title":"Description"},{"location":"command_reference/os/install/#usage","text":"gnoic [global-flags] os install [local-flags]","title":"Usage"},{"location":"command_reference/os/install/#flags","text":"","title":"Flags"},{"location":"command_reference/os/install/#version","text":"The --version flag sets the package version to be transferred.","title":"version"},{"location":"command_reference/os/install/#standby","text":"The --standby flag if present, instructs the target that the package should be transferred towards the standby supervisor.","title":"standby"},{"location":"command_reference/os/install/#pkg","text":"The --pkg flag points to the OS package file to be transferred.","title":"pkg"},{"location":"command_reference/os/install/#content-chunk-size","text":"The --content-chunk-size flag sets the maximum number of bytes to transfer in a TransferContent message, defaults to 1MB.","title":"content-chunk-size"},{"location":"command_reference/os/install/#examples","text":"gnoic -a 172 .17.0.100:57400 --skip-verify -u admin -p admin \\ os install \\ --version srlinux_22.6.0 --pkg srlinux_22.6.0.zip","title":"Examples"},{"location":"command_reference/os/verify/","text":"OS Verify # Description # The os verify command allows to check the running SW version on the target(s). It uses the gNOI OS Verify RPC , which is a unary RPC. Usage # gnoic [global-flags] os verify [local-flags] Examples # gnoic -a 172 .17.0.100:57400 --skip-verify -u admin -p admin \\ os verify","title":"verify"},{"location":"command_reference/os/verify/#os-verify","text":"","title":"OS Verify"},{"location":"command_reference/os/verify/#description","text":"The os verify command allows to check the running SW version on the target(s). It uses the gNOI OS Verify RPC , which is a unary RPC.","title":"Description"},{"location":"command_reference/os/verify/#usage","text":"gnoic [global-flags] os verify [local-flags]","title":"Usage"},{"location":"command_reference/os/verify/#examples","text":"gnoic -a 172 .17.0.100:57400 --skip-verify -u admin -p admin \\ os verify","title":"Examples"},{"location":"command_reference/system/cancel-reboot/","text":"System CancelReboot # Description # Usage # Flags # Examples #","title":"cancel-reboot"},{"location":"command_reference/system/cancel-reboot/#system-cancelreboot","text":"","title":"System CancelReboot"},{"location":"command_reference/system/cancel-reboot/#description","text":"","title":"Description"},{"location":"command_reference/system/cancel-reboot/#usage","text":"","title":"Usage"},{"location":"command_reference/system/cancel-reboot/#flags","text":"","title":"Flags"},{"location":"command_reference/system/cancel-reboot/#examples","text":"","title":"Examples"},{"location":"command_reference/system/ping/","text":"System Ping # Description # Ping executes the ping command on the target and streams back the results. Some targets may not stream any results until all results are in. If a packet count is not explicitly provided, 5 is used. Usage # gnoic [global-flags] system ping [local-flags] Flags # count # The --count flag sets the number of packets. A count of 0 defaults to a vendor specified value, typically 5. A count of -1 means continue until the RPC times out or is canceled. destination # The --destination flag sets the destination address to ping. required. do-not-fragment # The --do-not-fragment flag sets the do not fragment bit. (IPv4 destinations) do-not-resolve # The --do-not-resolve flag disables the resolution of the returned addresses. interval # The --interval flag sets the interval between requests, e.g 1s, 10ms protocol # The --protocol flag sets the layer 3 protocol used to ping, possible values: v4 or v6 size # The --size flag sets the size of request packet. (excluding ICMP header). If the size is 0, the vendor default size will be used (typically 56 bytes). source # The --source flag sets the source address to ping from. wait # The --wait flag sets the duration to wait for a response. Examples # simple ping # gnoic -a clab-gnoi-ceos1:6030 --insecure -u admin -p admin \\ system ping \\ --destination 1 .1.1.1 64 bytes from 1 .1.1.1: icmp_seq = 1 ttl = 56 time = 2 .43ms 64 bytes from 1 .1.1.1: icmp_seq = 2 ttl = 56 time = 3 .79ms 64 bytes from 1 .1.1.1: icmp_seq = 3 ttl = 56 time = 3 .78ms 64 bytes from 1 .1.1.1: icmp_seq = 4 ttl = 56 time = 3 .47ms 64 bytes from 1 .1.1.1: icmp_seq = 5 ttl = 56 time = 3 .49ms --- 1 .1.1.1 ping statistics --- 5 packets sent, 5 packets received, 0 .00% packet loss round-trip min/avg/max/stddev = 2 .438/3.397/3.798/0.504 ms json formatted output # gnoic -a clab-gnoi-ceos1:6030 --insecure -u admin -p admin \\ system ping \\ --destination 1 .1.1.1 --format json { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"source\" : \"1.1.1.1\" , \"time\" : 3550000 , \"bytes\" : 64 , \"sequence\" : 1 , \"ttl\" : 56 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"source\" : \"1.1.1.1\" , \"time\" : 3240000 , \"bytes\" : 64 , \"sequence\" : 2 , \"ttl\" : 56 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"source\" : \"1.1.1.1\" , \"time\" : 4610000 , \"bytes\" : 64 , \"sequence\" : 3 , \"ttl\" : 56 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"source\" : \"1.1.1.1\" , \"time\" : 2450000 , \"bytes\" : 64 , \"sequence\" : 4 , \"ttl\" : 56 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"source\" : \"1.1.1.1\" , \"time\" : 4070000 , \"bytes\" : 64 , \"sequence\" : 5 , \"ttl\" : 56 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"source\" : \"1.1.1.1\" , \"time\" : 4006000000 , \"sent\" : 5 , \"received\" : 5 , \"min_time\" : 2452000 , \"avg_time\" : 3587000 , \"max_time\" : 4611000 , \"std_dev\" : 734000 } } multiple targets # gnoic -a clab-gnoi-ceos1:6030,clab-gnoi-ceos2:6030 --insecure -u admin -p admin \\ system ping \\ --destination 1 .1.1.1 [ clab-gnoi-ceos1:6030 ] 64 bytes from 1 .1.1.1: icmp_seq = 1 ttl = 56 time = 3 .86ms [ clab-gnoi-ceos2:6030 ] 64 bytes from 1 .1.1.1: icmp_seq = 1 ttl = 56 time = 3 .89ms [ clab-gnoi-ceos2:6030 ] 64 bytes from 1 .1.1.1: icmp_seq = 2 ttl = 56 time = 4 .69ms [ clab-gnoi-ceos1:6030 ] 64 bytes from 1 .1.1.1: icmp_seq = 2 ttl = 56 time = 3 .8ms [ clab-gnoi-ceos2:6030 ] 64 bytes from 1 .1.1.1: icmp_seq = 3 ttl = 56 time = 4 .2ms [ clab-gnoi-ceos1:6030 ] 64 bytes from 1 .1.1.1: icmp_seq = 3 ttl = 56 time = 3 .09ms [ clab-gnoi-ceos1:6030 ] 64 bytes from 1 .1.1.1: icmp_seq = 4 ttl = 56 time = 3 .66ms [ clab-gnoi-ceos2:6030 ] 64 bytes from 1 .1.1.1: icmp_seq = 4 ttl = 56 time = 4 .68ms [ clab-gnoi-ceos1:6030 ] 64 bytes from 1 .1.1.1: icmp_seq = 5 ttl = 56 time = 3 .33ms [ clab-gnoi-ceos2:6030 ] 64 bytes from 1 .1.1.1: icmp_seq = 5 ttl = 56 time = 3 .47ms [ clab-gnoi-ceos2:6030 ] --- 1 .1.1.1 ping statistics --- [ clab-gnoi-ceos2:6030 ] 5 packets sent, 5 packets received, 0 .00% packet loss [ clab-gnoi-ceos2:6030 ] round-trip min/avg/max/stddev = 3 .471/4.188/4.693/0.469 ms [ clab-gnoi-ceos1:6030 ] --- 1 .1.1.1 ping statistics --- [ clab-gnoi-ceos1:6030 ] 5 packets sent, 5 packets received, 0 .00% packet loss [ clab-gnoi-ceos1:6030 ] round-trip min/avg/max/stddev = 3 .090/3.551/3.861/0.296 ms","title":"ping"},{"location":"command_reference/system/ping/#system-ping","text":"","title":"System Ping"},{"location":"command_reference/system/ping/#description","text":"Ping executes the ping command on the target and streams back the results. Some targets may not stream any results until all results are in. If a packet count is not explicitly provided, 5 is used.","title":"Description"},{"location":"command_reference/system/ping/#usage","text":"gnoic [global-flags] system ping [local-flags]","title":"Usage"},{"location":"command_reference/system/ping/#flags","text":"","title":"Flags"},{"location":"command_reference/system/ping/#count","text":"The --count flag sets the number of packets. A count of 0 defaults to a vendor specified value, typically 5. A count of -1 means continue until the RPC times out or is canceled.","title":"count"},{"location":"command_reference/system/ping/#destination","text":"The --destination flag sets the destination address to ping. required.","title":"destination"},{"location":"command_reference/system/ping/#do-not-fragment","text":"The --do-not-fragment flag sets the do not fragment bit. (IPv4 destinations)","title":"do-not-fragment"},{"location":"command_reference/system/ping/#do-not-resolve","text":"The --do-not-resolve flag disables the resolution of the returned addresses.","title":"do-not-resolve"},{"location":"command_reference/system/ping/#interval","text":"The --interval flag sets the interval between requests, e.g 1s, 10ms","title":"interval"},{"location":"command_reference/system/ping/#protocol","text":"The --protocol flag sets the layer 3 protocol used to ping, possible values: v4 or v6","title":"protocol"},{"location":"command_reference/system/ping/#size","text":"The --size flag sets the size of request packet. (excluding ICMP header). If the size is 0, the vendor default size will be used (typically 56 bytes).","title":"size"},{"location":"command_reference/system/ping/#source","text":"The --source flag sets the source address to ping from.","title":"source"},{"location":"command_reference/system/ping/#wait","text":"The --wait flag sets the duration to wait for a response.","title":"wait"},{"location":"command_reference/system/ping/#examples","text":"","title":"Examples"},{"location":"command_reference/system/ping/#simple-ping","text":"gnoic -a clab-gnoi-ceos1:6030 --insecure -u admin -p admin \\ system ping \\ --destination 1 .1.1.1 64 bytes from 1 .1.1.1: icmp_seq = 1 ttl = 56 time = 2 .43ms 64 bytes from 1 .1.1.1: icmp_seq = 2 ttl = 56 time = 3 .79ms 64 bytes from 1 .1.1.1: icmp_seq = 3 ttl = 56 time = 3 .78ms 64 bytes from 1 .1.1.1: icmp_seq = 4 ttl = 56 time = 3 .47ms 64 bytes from 1 .1.1.1: icmp_seq = 5 ttl = 56 time = 3 .49ms --- 1 .1.1.1 ping statistics --- 5 packets sent, 5 packets received, 0 .00% packet loss round-trip min/avg/max/stddev = 2 .438/3.397/3.798/0.504 ms","title":"simple ping"},{"location":"command_reference/system/ping/#json-formatted-output","text":"gnoic -a clab-gnoi-ceos1:6030 --insecure -u admin -p admin \\ system ping \\ --destination 1 .1.1.1 --format json { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"source\" : \"1.1.1.1\" , \"time\" : 3550000 , \"bytes\" : 64 , \"sequence\" : 1 , \"ttl\" : 56 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"source\" : \"1.1.1.1\" , \"time\" : 3240000 , \"bytes\" : 64 , \"sequence\" : 2 , \"ttl\" : 56 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"source\" : \"1.1.1.1\" , \"time\" : 4610000 , \"bytes\" : 64 , \"sequence\" : 3 , \"ttl\" : 56 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"source\" : \"1.1.1.1\" , \"time\" : 2450000 , \"bytes\" : 64 , \"sequence\" : 4 , \"ttl\" : 56 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"source\" : \"1.1.1.1\" , \"time\" : 4070000 , \"bytes\" : 64 , \"sequence\" : 5 , \"ttl\" : 56 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"source\" : \"1.1.1.1\" , \"time\" : 4006000000 , \"sent\" : 5 , \"received\" : 5 , \"min_time\" : 2452000 , \"avg_time\" : 3587000 , \"max_time\" : 4611000 , \"std_dev\" : 734000 } }","title":"json formatted output"},{"location":"command_reference/system/ping/#multiple-targets","text":"gnoic -a clab-gnoi-ceos1:6030,clab-gnoi-ceos2:6030 --insecure -u admin -p admin \\ system ping \\ --destination 1 .1.1.1 [ clab-gnoi-ceos1:6030 ] 64 bytes from 1 .1.1.1: icmp_seq = 1 ttl = 56 time = 3 .86ms [ clab-gnoi-ceos2:6030 ] 64 bytes from 1 .1.1.1: icmp_seq = 1 ttl = 56 time = 3 .89ms [ clab-gnoi-ceos2:6030 ] 64 bytes from 1 .1.1.1: icmp_seq = 2 ttl = 56 time = 4 .69ms [ clab-gnoi-ceos1:6030 ] 64 bytes from 1 .1.1.1: icmp_seq = 2 ttl = 56 time = 3 .8ms [ clab-gnoi-ceos2:6030 ] 64 bytes from 1 .1.1.1: icmp_seq = 3 ttl = 56 time = 4 .2ms [ clab-gnoi-ceos1:6030 ] 64 bytes from 1 .1.1.1: icmp_seq = 3 ttl = 56 time = 3 .09ms [ clab-gnoi-ceos1:6030 ] 64 bytes from 1 .1.1.1: icmp_seq = 4 ttl = 56 time = 3 .66ms [ clab-gnoi-ceos2:6030 ] 64 bytes from 1 .1.1.1: icmp_seq = 4 ttl = 56 time = 4 .68ms [ clab-gnoi-ceos1:6030 ] 64 bytes from 1 .1.1.1: icmp_seq = 5 ttl = 56 time = 3 .33ms [ clab-gnoi-ceos2:6030 ] 64 bytes from 1 .1.1.1: icmp_seq = 5 ttl = 56 time = 3 .47ms [ clab-gnoi-ceos2:6030 ] --- 1 .1.1.1 ping statistics --- [ clab-gnoi-ceos2:6030 ] 5 packets sent, 5 packets received, 0 .00% packet loss [ clab-gnoi-ceos2:6030 ] round-trip min/avg/max/stddev = 3 .471/4.188/4.693/0.469 ms [ clab-gnoi-ceos1:6030 ] --- 1 .1.1.1 ping statistics --- [ clab-gnoi-ceos1:6030 ] 5 packets sent, 5 packets received, 0 .00% packet loss [ clab-gnoi-ceos1:6030 ] round-trip min/avg/max/stddev = 3 .090/3.551/3.861/0.296 ms","title":"multiple targets"},{"location":"command_reference/system/reboot-status/","text":"System RebootStatus # Description # Usage # Flags # Examples #","title":"reboot-status"},{"location":"command_reference/system/reboot-status/#system-rebootstatus","text":"","title":"System RebootStatus"},{"location":"command_reference/system/reboot-status/#description","text":"","title":"Description"},{"location":"command_reference/system/reboot-status/#usage","text":"","title":"Usage"},{"location":"command_reference/system/reboot-status/#flags","text":"","title":"Flags"},{"location":"command_reference/system/reboot-status/#examples","text":"","title":"Examples"},{"location":"command_reference/system/reboot/","text":"System Reboot # Description # Usage # Flags # Examples #","title":"reboot"},{"location":"command_reference/system/reboot/#system-reboot","text":"","title":"System Reboot"},{"location":"command_reference/system/reboot/#description","text":"","title":"Description"},{"location":"command_reference/system/reboot/#usage","text":"","title":"Usage"},{"location":"command_reference/system/reboot/#flags","text":"","title":"Flags"},{"location":"command_reference/system/reboot/#examples","text":"","title":"Examples"},{"location":"command_reference/system/set-package/","text":"System SetPackage # Description # Usage # Flags # Examples #","title":"set-package"},{"location":"command_reference/system/set-package/#system-setpackage","text":"","title":"System SetPackage"},{"location":"command_reference/system/set-package/#description","text":"","title":"Description"},{"location":"command_reference/system/set-package/#usage","text":"","title":"Usage"},{"location":"command_reference/system/set-package/#flags","text":"","title":"Flags"},{"location":"command_reference/system/set-package/#examples","text":"","title":"Examples"},{"location":"command_reference/system/switch-control-processor/","text":"System SwitchControlProcessor # Description # Usage # Flags # Examples #","title":"switch-control-processor"},{"location":"command_reference/system/switch-control-processor/#system-switchcontrolprocessor","text":"","title":"System SwitchControlProcessor"},{"location":"command_reference/system/switch-control-processor/#description","text":"","title":"Description"},{"location":"command_reference/system/switch-control-processor/#usage","text":"","title":"Usage"},{"location":"command_reference/system/switch-control-processor/#flags","text":"","title":"Flags"},{"location":"command_reference/system/switch-control-processor/#examples","text":"","title":"Examples"},{"location":"command_reference/system/time/","text":"System Time # Description # Usage # Flags # Examples #","title":"time"},{"location":"command_reference/system/time/#system-time","text":"","title":"System Time"},{"location":"command_reference/system/time/#description","text":"","title":"Description"},{"location":"command_reference/system/time/#usage","text":"","title":"Usage"},{"location":"command_reference/system/time/#flags","text":"","title":"Flags"},{"location":"command_reference/system/time/#examples","text":"","title":"Examples"},{"location":"command_reference/system/traceroute/","text":"System Traceroute # Description # Traceroute executes the traceroute command on the target and streams back the results. Some targets may not stream any results until all results are in. If a hop count is not explicitly provided, 30 is used. Usage # gnoic [global-flags] system traceroute [local-flags] Flags # destination # The --destination flag sets the destination address of the traceroute command. do-not-fragment # The --do-not-fragment flag sets the do not fragment bit. (IPv4 destinations) do-not-resolve # The --do-not-resolve flag disables the resolution of the returned addresses. initial-ttl # The --initial-ttl flag sets the initial TTL the packets start with, default=1 l3protocol # The -3 | --l3protocol flag sets the layer 3 protocol used to traceroute, possible values: v4 or v6 l4protocol # The -4 | --l4protocol flag sets the layer 4 protocol used to traceroute, possible ICMP , UDP or TCP . Default ICMP max-ttl # The --max-ttl flag sets the maximum number of hops. (default=30) source # The --source flag sets the source address to traceroute from. wait # The --wait flag sets the duration to wait for a response. Examples # simple traceroute # gnoic -a clab-gnoi-ceos1:6030 --insecure -u admin -p admin \\ system traceroute \\ --destination 1 .1.1.1 1 172 -11-11-1.lightspeed.chrlnc.sbcglobal.net ( 172 .11.11.1 ) 43\u00b5s 1 172 -11-11-1.lightspeed.chrlnc.sbcglobal.net ( 172 .11.11.1 ) 5\u00b5s 1 172 -11-11-1.lightspeed.chrlnc.sbcglobal.net ( 172 .11.11.1 ) 4\u00b5s 2 192 .168.1.1 ( 192 .168.1.1 ) 2 .196ms 2 192 .168.1.1 ( 192 .168.1.1 ) 2 .568ms 2 192 .168.1.1 ( 192 .168.1.1 ) 2 .974ms 3 h254.s98.ts.hinet.net ( 168 .95.98.254 ) [ AS3462 ] 13 .179ms 3 h254.s98.ts.hinet.net ( 168 .95.98.254 ) [ AS3462 ] 13 .178ms 3 h254.s98.ts.hinet.net ( 168 .95.98.254 ) [ AS3462 ] 13 .208ms 4 tpdb-3332.hinet.net ( 168 .95.83.102 ) [ AS3462 ] 3 .707ms 4 tpdb-3332.hinet.net ( 168 .95.83.102 ) [ AS3462 ] 3 .789ms 4 tpdb-3332.hinet.net ( 168 .95.83.102 ) [ AS3462 ] 3 .874ms 5 tpdt-3032.hinet.net ( 220 .128.4.142 ) [ AS3462 ] <MPLS:L = 24304 ,E = 0 ,S = 1 ,T = 1 > 3 .53ms 5 tpdt-3032.hinet.net ( 220 .128.4.142 ) [ AS3462 ] <MPLS:L = 24304 ,E = 0 ,S = 1 ,T = 1 > 3 .528ms 5 tpdt-3032.hinet.net ( 220 .128.4.142 ) [ AS3462 ] <MPLS:L = 24304 ,E = 0 ,S = 1 ,T = 1 > 3 .6ms 6 tpdt-3012.hinet.net ( 220 .128.25.89 ) [ AS3462 ] <MPLS:L = 24306 ,E = 0 ,S = 1 ,T = 1 > 3 .987ms 6 tpdt-3012.hinet.net ( 220 .128.25.89 ) [ AS3462 ] <MPLS:L = 24306 ,E = 0 ,S = 1 ,T = 1 > 5 .5ms 6 tpdt-3012.hinet.net ( 220 .128.25.89 ) [ AS3462 ] <MPLS:L = 24306 ,E = 0 ,S = 1 ,T = 1 > 5 .588ms 7 220 -128-4-193.HINET-IP.hinet.net ( 220 .128.4.193 ) [ AS3462 ] 2 .566ms 7 220 -128-4-193.HINET-IP.hinet.net ( 220 .128.4.193 ) [ AS3462 ] 3 .791ms 7 220 -128-4-193.HINET-IP.hinet.net ( 220 .128.4.193 ) [ AS3462 ] 3 .752ms 8 210 -242-214-45.HINET-IP.hinet.net ( 210 .242.214.45 ) [ AS3462 ] 4 .749ms 8 210 -242-214-45.HINET-IP.hinet.net ( 210 .242.214.45 ) [ AS3462 ] 4 .853ms 8 210 -242-214-45.HINET-IP.hinet.net ( 210 .242.214.45 ) [ AS3462 ] 4 .949ms 9 one.one.one.one ( 1 .1.1.1 ) [ AS13335 ] 4 .236ms 9 one.one.one.one ( 1 .1.1.1 ) [ AS13335 ] 4 .47ms 9 one.one.one.one ( 1 .1.1.1 ) [ AS13335 ] 4 .465ms json formatted output # gnoic -a clab-gnoi-ceos1:6030 --insecure -u admin -p admin \\ system traceroute \\ --destination 1 .1.1.1 --format json { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"destination_name\" : \"1.1.1.1\" , \"destination_address\" : \"1.1.1.1\" , \"hops\" : 30 , \"packet_size\" : 60 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 1 , \"address\" : \"172.11.11.1\" , \"name\" : \"172-11-11-1.lightspeed.chrlnc.sbcglobal.net\" , \"rtt\" : 56000 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 1 , \"address\" : \"172.11.11.1\" , \"name\" : \"172-11-11-1.lightspeed.chrlnc.sbcglobal.net\" , \"rtt\" : 5000 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 1 , \"address\" : \"172.11.11.1\" , \"name\" : \"172-11-11-1.lightspeed.chrlnc.sbcglobal.net\" , \"rtt\" : 4000 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 2 , \"address\" : \"192.168.1.1\" , \"name\" : \"192.168.1.1\" , \"rtt\" : 2146000 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 2 , \"address\" : \"192.168.1.1\" , \"name\" : \"192.168.1.1\" , \"rtt\" : 2515000 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 2 , \"address\" : \"192.168.1.1\" , \"name\" : \"192.168.1.1\" , \"rtt\" : 2885000 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 3 , \"address\" : \"168.95.98.254\" , \"name\" : \"h254.s98.ts.hinet.net\" , \"rtt\" : 6850000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 3 , \"address\" : \"168.95.98.254\" , \"name\" : \"h254.s98.ts.hinet.net\" , \"rtt\" : 6848000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 3 , \"address\" : \"168.95.98.254\" , \"name\" : \"h254.s98.ts.hinet.net\" , \"rtt\" : 7022000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 4 , \"address\" : \"168.95.83.102\" , \"name\" : \"tpdb-3332.hinet.net\" , \"rtt\" : 3365000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 4 , \"address\" : \"168.95.83.102\" , \"name\" : \"tpdb-3332.hinet.net\" , \"rtt\" : 3462000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 4 , \"address\" : \"168.95.83.102\" , \"name\" : \"tpdb-3332.hinet.net\" , \"rtt\" : 3561000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 5 , \"address\" : \"220.128.4.142\" , \"name\" : \"tpdt-3032.hinet.net\" , \"rtt\" : 3046000 , \"mpls\" : { \"E\" : \"0\" , \"Label\" : \"24304\" , \"S\" : \"1\" , \"TTL\" : \"1\" }, \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 5 , \"address\" : \"220.128.4.142\" , \"name\" : \"tpdt-3032.hinet.net\" , \"rtt\" : 3149000 , \"mpls\" : { \"E\" : \"0\" , \"Label\" : \"24304\" , \"S\" : \"1\" , \"TTL\" : \"1\" }, \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 5 , \"address\" : \"220.128.4.142\" , \"name\" : \"tpdt-3032.hinet.net\" , \"rtt\" : 3262000 , \"mpls\" : { \"E\" : \"0\" , \"Label\" : \"24304\" , \"S\" : \"1\" , \"TTL\" : \"1\" }, \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 6 , \"address\" : \"220.128.25.89\" , \"name\" : \"tpdt-3012.hinet.net\" , \"rtt\" : 4975000 , \"mpls\" : { \"E\" : \"0\" , \"Label\" : \"24306\" , \"S\" : \"1\" , \"TTL\" : \"1\" }, \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 6 , \"address\" : \"220.128.25.89\" , \"name\" : \"tpdt-3012.hinet.net\" , \"rtt\" : 3943000 , \"mpls\" : { \"E\" : \"0\" , \"Label\" : \"24306\" , \"S\" : \"1\" , \"TTL\" : \"1\" }, \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 6 , \"address\" : \"220.128.25.89\" , \"name\" : \"tpdt-3012.hinet.net\" , \"rtt\" : 7836000 , \"mpls\" : { \"E\" : \"0\" , \"Label\" : \"24306\" , \"S\" : \"1\" , \"TTL\" : \"1\" }, \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 7 , \"address\" : \"220.128.4.193\" , \"name\" : \"220-128-4-193.HINET-IP.hinet.net\" , \"rtt\" : 3936000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 7 , \"address\" : \"220.128.4.193\" , \"name\" : \"220-128-4-193.HINET-IP.hinet.net\" , \"rtt\" : 1772000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 7 , \"address\" : \"220.128.4.193\" , \"name\" : \"220-128-4-193.HINET-IP.hinet.net\" , \"rtt\" : 1752000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 8 , \"address\" : \"210.242.214.45\" , \"name\" : \"210-242-214-45.HINET-IP.hinet.net\" , \"rtt\" : 2907000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 8 , \"address\" : \"210.242.214.45\" , \"name\" : \"210-242-214-45.HINET-IP.hinet.net\" , \"rtt\" : 5204000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 8 , \"address\" : \"210.242.214.45\" , \"name\" : \"210-242-214-45.HINET-IP.hinet.net\" , \"rtt\" : 5285000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 9 , \"address\" : \"1.1.1.1\" , \"name\" : \"one.one.one.one\" , \"rtt\" : 4837000 , \"as_path\" : [ 13335 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 9 , \"address\" : \"1.1.1.1\" , \"name\" : \"one.one.one.one\" , \"rtt\" : 4834000 , \"as_path\" : [ 13335 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 9 , \"address\" : \"1.1.1.1\" , \"name\" : \"one.one.one.one\" , \"rtt\" : 4873000 , \"as_path\" : [ 13335 ] } } multiple targets traceroute # gnoic -a clab-gnoi-ceos1:6030,clab-gnoi-ceos2:6030 --insecure -u admin -p admin \\ system traceroute \\ --destination 1 .1.1.1 [ clab-gnoi-ceos2:6030 ] Traceroute to 1 .1.1.1 ( 1 .1.1.1 ) , 30 max hops, 60 byte packet size [ clab-gnoi-ceos1:6030 ] Traceroute to 1 .1.1.1 ( 1 .1.1.1 ) , 30 max hops, 60 byte packet size [ clab-gnoi-ceos2:6030 ] 1 172 -11-11-1.lightspeed.chrlnc.sbcglobal.net ( 172 .11.11.1 ) 53\u00b5s [ clab-gnoi-ceos2:6030 ] 1 172 -11-11-1.lightspeed.chrlnc.sbcglobal.net ( 172 .11.11.1 ) 6\u00b5s [ clab-gnoi-ceos2:6030 ] 1 172 -11-11-1.lightspeed.chrlnc.sbcglobal.net ( 172 .11.11.1 ) 4\u00b5s [ clab-gnoi-ceos1:6030 ] 1 172 -11-11-1.lightspeed.chrlnc.sbcglobal.net ( 172 .11.11.1 ) 24\u00b5s [ clab-gnoi-ceos1:6030 ] 1 172 -11-11-1.lightspeed.chrlnc.sbcglobal.net ( 172 .11.11.1 ) 6\u00b5s [ clab-gnoi-ceos1:6030 ] 1 172 -11-11-1.lightspeed.chrlnc.sbcglobal.net ( 172 .11.11.1 ) 5\u00b5s [ clab-gnoi-ceos2:6030 ] 2 192 .168.1.1 ( 192 .168.1.1 ) 3 .521ms [ clab-gnoi-ceos2:6030 ] 2 192 .168.1.1 ( 192 .168.1.1 ) 3 .932ms [ clab-gnoi-ceos2:6030 ] 2 192 .168.1.1 ( 192 .168.1.1 ) 4 .284ms [ clab-gnoi-ceos1:6030 ] 2 192 .168.1.1 ( 192 .168.1.1 ) 3 .981ms [ clab-gnoi-ceos1:6030 ] 2 192 .168.1.1 ( 192 .168.1.1 ) 4 .385ms [ clab-gnoi-ceos1:6030 ] 2 192 .168.1.1 ( 192 .168.1.1 ) 4 .715ms [ clab-gnoi-ceos1:6030 ] 3 h254.s98.ts.hinet.net ( 168 .95.98.254 ) [ AS3462 ] 10 .295ms [ clab-gnoi-ceos1:6030 ] 3 h254.s98.ts.hinet.net ( 168 .95.98.254 ) [ AS3462 ] 10 .391ms [ clab-gnoi-ceos1:6030 ] 3 h254.s98.ts.hinet.net ( 168 .95.98.254 ) [ AS3462 ] 10 .487ms [ clab-gnoi-ceos2:6030 ] 3 h254.s98.ts.hinet.net ( 168 .95.98.254 ) [ AS3462 ] 10 .666ms [ clab-gnoi-ceos2:6030 ] 3 h254.s98.ts.hinet.net ( 168 .95.98.254 ) [ AS3462 ] 10 .769ms [ clab-gnoi-ceos2:6030 ] 3 h254.s98.ts.hinet.net ( 168 .95.98.254 ) [ AS3462 ] 10 .911ms [ clab-gnoi-ceos1:6030 ] 4 tpdb-3332.hinet.net ( 168 .95.83.102 ) [ AS3462 ] 6 .396ms [ clab-gnoi-ceos1:6030 ] 4 tpdb-3332.hinet.net ( 168 .95.83.102 ) [ AS3462 ] 6 .492ms [ clab-gnoi-ceos1:6030 ] 4 tpdb-3332.hinet.net ( 168 .95.83.102 ) [ AS3462 ] 6 .59ms [ clab-gnoi-ceos2:6030 ] 4 tpdb-3332.hinet.net ( 168 .95.83.102 ) [ AS3462 ] 6 .571ms [ clab-gnoi-ceos2:6030 ] 4 tpdb-3332.hinet.net ( 168 .95.83.102 ) [ AS3462 ] 6 .751ms [ clab-gnoi-ceos2:6030 ] 4 tpdb-3332.hinet.net ( 168 .95.83.102 ) [ AS3462 ] 6 .958ms [ clab-gnoi-ceos1:6030 ] 5 tpdt-3032.hinet.net ( 220 .128.4.142 ) [ AS3462 ] <MPLS:L = 24304 ,E = 0 ,S = 1 ,T = 1 > 5 .578ms [ clab-gnoi-ceos1:6030 ] 5 tpdt-3032.hinet.net ( 220 .128.4.142 ) [ AS3462 ] <MPLS:L = 24304 ,E = 0 ,S = 1 ,T = 1 > 5 .677ms [ clab-gnoi-ceos1:6030 ] 5 tpdt-3032.hinet.net ( 220 .128.4.142 ) [ AS3462 ] <MPLS:L = 24304 ,E = 0 ,S = 1 ,T = 1 > 5 .773ms [ clab-gnoi-ceos2:6030 ] 5 tpdt-3032.hinet.net ( 220 .128.4.142 ) [ AS3462 ] <MPLS:L = 24304 ,E = 0 ,S = 1 ,T = 1 > 5 .964ms [ clab-gnoi-ceos2:6030 ] 5 tpdt-3032.hinet.net ( 220 .128.4.142 ) [ AS3462 ] <MPLS:L = 24304 ,E = 0 ,S = 1 ,T = 1 > 6 .063ms [ clab-gnoi-ceos2:6030 ] 5 tpdt-3032.hinet.net ( 220 .128.4.142 ) [ AS3462 ] <MPLS:L = 24304 ,E = 0 ,S = 1 ,T = 1 > 6 .184ms [ clab-gnoi-ceos1:6030 ] 6 tpdt-3012.hinet.net ( 220 .128.25.89 ) [ AS3462 ] <MPLS:L = 24306 ,E = 0 ,S = 1 ,T = 1 > 6 .183ms [ clab-gnoi-ceos1:6030 ] 6 tpdt-3012.hinet.net ( 220 .128.25.89 ) [ AS3462 ] <MPLS:L = 24306 ,E = 0 ,S = 1 ,T = 1 > 4 .017ms [ clab-gnoi-ceos1:6030 ] 6 tpdt-3012.hinet.net ( 220 .128.25.89 ) [ AS3462 ] <MPLS:L = 24306 ,E = 0 ,S = 1 ,T = 1 > 4 .099ms [ clab-gnoi-ceos2:6030 ] 6 tpdt-3012.hinet.net ( 220 .128.25.89 ) [ AS3462 ] <MPLS:L = 24306 ,E = 0 ,S = 1 ,T = 1 > 6 .645ms [ clab-gnoi-ceos2:6030 ] 6 tpdt-3012.hinet.net ( 220 .128.25.89 ) [ AS3462 ] <MPLS:L = 24306 ,E = 0 ,S = 1 ,T = 1 > 3 .423ms [ clab-gnoi-ceos2:6030 ] 6 tpdt-3012.hinet.net ( 220 .128.25.89 ) [ AS3462 ] <MPLS:L = 24306 ,E = 0 ,S = 1 ,T = 1 > 3 .508ms [ clab-gnoi-ceos1:6030 ] 7 220 -128-4-193.HINET-IP.hinet.net ( 220 .128.4.193 ) [ AS3462 ] 3 .293ms [ clab-gnoi-ceos1:6030 ] 7 220 -128-4-193.HINET-IP.hinet.net ( 220 .128.4.193 ) [ AS3462 ] 12 .711ms [ clab-gnoi-ceos1:6030 ] 7 220 -128-4-193.HINET-IP.hinet.net ( 220 .128.4.193 ) [ AS3462 ] 12 .814ms [ clab-gnoi-ceos2:6030 ] 7 220 -128-4-193.HINET-IP.hinet.net ( 220 .128.4.193 ) [ AS3462 ] 2 .629ms [ clab-gnoi-ceos2:6030 ] 7 220 -128-4-193.HINET-IP.hinet.net ( 220 .128.4.193 ) [ AS3462 ] 3 .227ms [ clab-gnoi-ceos2:6030 ] 7 220 -128-4-193.HINET-IP.hinet.net ( 220 .128.4.193 ) [ AS3462 ] 3 .312ms [ clab-gnoi-ceos1:6030 ] 8 210 -242-214-45.HINET-IP.hinet.net ( 210 .242.214.45 ) [ AS3462 ] 4 .61ms [ clab-gnoi-ceos1:6030 ] 8 210 -242-214-45.HINET-IP.hinet.net ( 210 .242.214.45 ) [ AS3462 ] 4 .698ms [ clab-gnoi-ceos1:6030 ] 8 210 -242-214-45.HINET-IP.hinet.net ( 210 .242.214.45 ) [ AS3462 ] 4 .812ms [ clab-gnoi-ceos2:6030 ] 8 210 -242-214-45.HINET-IP.hinet.net ( 210 .242.214.45 ) [ AS3462 ] 4 .18ms [ clab-gnoi-ceos2:6030 ] 8 210 -242-214-45.HINET-IP.hinet.net ( 210 .242.214.45 ) [ AS3462 ] 4 .222ms [ clab-gnoi-ceos2:6030 ] 8 210 -242-214-45.HINET-IP.hinet.net ( 210 .242.214.45 ) [ AS3462 ] 4 .516ms [ clab-gnoi-ceos2:6030 ] 9 one.one.one.one ( 1 .1.1.1 ) [ AS13335 ] 3 .619ms [ clab-gnoi-ceos2:6030 ] 9 one.one.one.one ( 1 .1.1.1 ) [ AS13335 ] 3 .86ms [ clab-gnoi-ceos2:6030 ] 9 one.one.one.one ( 1 .1.1.1 ) [ AS13335 ] 3 .935ms [ clab-gnoi-ceos1:6030 ] 9 one.one.one.one ( 1 .1.1.1 ) [ AS13335 ] 4 .375ms [ clab-gnoi-ceos1:6030 ] 9 one.one.one.one ( 1 .1.1.1 ) [ AS13335 ] 4 .259ms [ clab-gnoi-ceos1:6030 ] 9 No Response","title":"traceroute"},{"location":"command_reference/system/traceroute/#system-traceroute","text":"","title":"System Traceroute"},{"location":"command_reference/system/traceroute/#description","text":"Traceroute executes the traceroute command on the target and streams back the results. Some targets may not stream any results until all results are in. If a hop count is not explicitly provided, 30 is used.","title":"Description"},{"location":"command_reference/system/traceroute/#usage","text":"gnoic [global-flags] system traceroute [local-flags]","title":"Usage"},{"location":"command_reference/system/traceroute/#flags","text":"","title":"Flags"},{"location":"command_reference/system/traceroute/#destination","text":"The --destination flag sets the destination address of the traceroute command.","title":"destination"},{"location":"command_reference/system/traceroute/#do-not-fragment","text":"The --do-not-fragment flag sets the do not fragment bit. (IPv4 destinations)","title":"do-not-fragment"},{"location":"command_reference/system/traceroute/#do-not-resolve","text":"The --do-not-resolve flag disables the resolution of the returned addresses.","title":"do-not-resolve"},{"location":"command_reference/system/traceroute/#initial-ttl","text":"The --initial-ttl flag sets the initial TTL the packets start with, default=1","title":"initial-ttl"},{"location":"command_reference/system/traceroute/#l3protocol","text":"The -3 | --l3protocol flag sets the layer 3 protocol used to traceroute, possible values: v4 or v6","title":"l3protocol"},{"location":"command_reference/system/traceroute/#l4protocol","text":"The -4 | --l4protocol flag sets the layer 4 protocol used to traceroute, possible ICMP , UDP or TCP . Default ICMP","title":"l4protocol"},{"location":"command_reference/system/traceroute/#max-ttl","text":"The --max-ttl flag sets the maximum number of hops. (default=30)","title":"max-ttl"},{"location":"command_reference/system/traceroute/#source","text":"The --source flag sets the source address to traceroute from.","title":"source"},{"location":"command_reference/system/traceroute/#wait","text":"The --wait flag sets the duration to wait for a response.","title":"wait"},{"location":"command_reference/system/traceroute/#examples","text":"","title":"Examples"},{"location":"command_reference/system/traceroute/#simple-traceroute","text":"gnoic -a clab-gnoi-ceos1:6030 --insecure -u admin -p admin \\ system traceroute \\ --destination 1 .1.1.1 1 172 -11-11-1.lightspeed.chrlnc.sbcglobal.net ( 172 .11.11.1 ) 43\u00b5s 1 172 -11-11-1.lightspeed.chrlnc.sbcglobal.net ( 172 .11.11.1 ) 5\u00b5s 1 172 -11-11-1.lightspeed.chrlnc.sbcglobal.net ( 172 .11.11.1 ) 4\u00b5s 2 192 .168.1.1 ( 192 .168.1.1 ) 2 .196ms 2 192 .168.1.1 ( 192 .168.1.1 ) 2 .568ms 2 192 .168.1.1 ( 192 .168.1.1 ) 2 .974ms 3 h254.s98.ts.hinet.net ( 168 .95.98.254 ) [ AS3462 ] 13 .179ms 3 h254.s98.ts.hinet.net ( 168 .95.98.254 ) [ AS3462 ] 13 .178ms 3 h254.s98.ts.hinet.net ( 168 .95.98.254 ) [ AS3462 ] 13 .208ms 4 tpdb-3332.hinet.net ( 168 .95.83.102 ) [ AS3462 ] 3 .707ms 4 tpdb-3332.hinet.net ( 168 .95.83.102 ) [ AS3462 ] 3 .789ms 4 tpdb-3332.hinet.net ( 168 .95.83.102 ) [ AS3462 ] 3 .874ms 5 tpdt-3032.hinet.net ( 220 .128.4.142 ) [ AS3462 ] <MPLS:L = 24304 ,E = 0 ,S = 1 ,T = 1 > 3 .53ms 5 tpdt-3032.hinet.net ( 220 .128.4.142 ) [ AS3462 ] <MPLS:L = 24304 ,E = 0 ,S = 1 ,T = 1 > 3 .528ms 5 tpdt-3032.hinet.net ( 220 .128.4.142 ) [ AS3462 ] <MPLS:L = 24304 ,E = 0 ,S = 1 ,T = 1 > 3 .6ms 6 tpdt-3012.hinet.net ( 220 .128.25.89 ) [ AS3462 ] <MPLS:L = 24306 ,E = 0 ,S = 1 ,T = 1 > 3 .987ms 6 tpdt-3012.hinet.net ( 220 .128.25.89 ) [ AS3462 ] <MPLS:L = 24306 ,E = 0 ,S = 1 ,T = 1 > 5 .5ms 6 tpdt-3012.hinet.net ( 220 .128.25.89 ) [ AS3462 ] <MPLS:L = 24306 ,E = 0 ,S = 1 ,T = 1 > 5 .588ms 7 220 -128-4-193.HINET-IP.hinet.net ( 220 .128.4.193 ) [ AS3462 ] 2 .566ms 7 220 -128-4-193.HINET-IP.hinet.net ( 220 .128.4.193 ) [ AS3462 ] 3 .791ms 7 220 -128-4-193.HINET-IP.hinet.net ( 220 .128.4.193 ) [ AS3462 ] 3 .752ms 8 210 -242-214-45.HINET-IP.hinet.net ( 210 .242.214.45 ) [ AS3462 ] 4 .749ms 8 210 -242-214-45.HINET-IP.hinet.net ( 210 .242.214.45 ) [ AS3462 ] 4 .853ms 8 210 -242-214-45.HINET-IP.hinet.net ( 210 .242.214.45 ) [ AS3462 ] 4 .949ms 9 one.one.one.one ( 1 .1.1.1 ) [ AS13335 ] 4 .236ms 9 one.one.one.one ( 1 .1.1.1 ) [ AS13335 ] 4 .47ms 9 one.one.one.one ( 1 .1.1.1 ) [ AS13335 ] 4 .465ms","title":"simple traceroute"},{"location":"command_reference/system/traceroute/#json-formatted-output","text":"gnoic -a clab-gnoi-ceos1:6030 --insecure -u admin -p admin \\ system traceroute \\ --destination 1 .1.1.1 --format json { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"destination_name\" : \"1.1.1.1\" , \"destination_address\" : \"1.1.1.1\" , \"hops\" : 30 , \"packet_size\" : 60 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 1 , \"address\" : \"172.11.11.1\" , \"name\" : \"172-11-11-1.lightspeed.chrlnc.sbcglobal.net\" , \"rtt\" : 56000 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 1 , \"address\" : \"172.11.11.1\" , \"name\" : \"172-11-11-1.lightspeed.chrlnc.sbcglobal.net\" , \"rtt\" : 5000 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 1 , \"address\" : \"172.11.11.1\" , \"name\" : \"172-11-11-1.lightspeed.chrlnc.sbcglobal.net\" , \"rtt\" : 4000 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 2 , \"address\" : \"192.168.1.1\" , \"name\" : \"192.168.1.1\" , \"rtt\" : 2146000 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 2 , \"address\" : \"192.168.1.1\" , \"name\" : \"192.168.1.1\" , \"rtt\" : 2515000 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 2 , \"address\" : \"192.168.1.1\" , \"name\" : \"192.168.1.1\" , \"rtt\" : 2885000 } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 3 , \"address\" : \"168.95.98.254\" , \"name\" : \"h254.s98.ts.hinet.net\" , \"rtt\" : 6850000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 3 , \"address\" : \"168.95.98.254\" , \"name\" : \"h254.s98.ts.hinet.net\" , \"rtt\" : 6848000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 3 , \"address\" : \"168.95.98.254\" , \"name\" : \"h254.s98.ts.hinet.net\" , \"rtt\" : 7022000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 4 , \"address\" : \"168.95.83.102\" , \"name\" : \"tpdb-3332.hinet.net\" , \"rtt\" : 3365000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 4 , \"address\" : \"168.95.83.102\" , \"name\" : \"tpdb-3332.hinet.net\" , \"rtt\" : 3462000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 4 , \"address\" : \"168.95.83.102\" , \"name\" : \"tpdb-3332.hinet.net\" , \"rtt\" : 3561000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 5 , \"address\" : \"220.128.4.142\" , \"name\" : \"tpdt-3032.hinet.net\" , \"rtt\" : 3046000 , \"mpls\" : { \"E\" : \"0\" , \"Label\" : \"24304\" , \"S\" : \"1\" , \"TTL\" : \"1\" }, \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 5 , \"address\" : \"220.128.4.142\" , \"name\" : \"tpdt-3032.hinet.net\" , \"rtt\" : 3149000 , \"mpls\" : { \"E\" : \"0\" , \"Label\" : \"24304\" , \"S\" : \"1\" , \"TTL\" : \"1\" }, \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 5 , \"address\" : \"220.128.4.142\" , \"name\" : \"tpdt-3032.hinet.net\" , \"rtt\" : 3262000 , \"mpls\" : { \"E\" : \"0\" , \"Label\" : \"24304\" , \"S\" : \"1\" , \"TTL\" : \"1\" }, \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 6 , \"address\" : \"220.128.25.89\" , \"name\" : \"tpdt-3012.hinet.net\" , \"rtt\" : 4975000 , \"mpls\" : { \"E\" : \"0\" , \"Label\" : \"24306\" , \"S\" : \"1\" , \"TTL\" : \"1\" }, \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 6 , \"address\" : \"220.128.25.89\" , \"name\" : \"tpdt-3012.hinet.net\" , \"rtt\" : 3943000 , \"mpls\" : { \"E\" : \"0\" , \"Label\" : \"24306\" , \"S\" : \"1\" , \"TTL\" : \"1\" }, \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 6 , \"address\" : \"220.128.25.89\" , \"name\" : \"tpdt-3012.hinet.net\" , \"rtt\" : 7836000 , \"mpls\" : { \"E\" : \"0\" , \"Label\" : \"24306\" , \"S\" : \"1\" , \"TTL\" : \"1\" }, \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 7 , \"address\" : \"220.128.4.193\" , \"name\" : \"220-128-4-193.HINET-IP.hinet.net\" , \"rtt\" : 3936000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 7 , \"address\" : \"220.128.4.193\" , \"name\" : \"220-128-4-193.HINET-IP.hinet.net\" , \"rtt\" : 1772000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 7 , \"address\" : \"220.128.4.193\" , \"name\" : \"220-128-4-193.HINET-IP.hinet.net\" , \"rtt\" : 1752000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 8 , \"address\" : \"210.242.214.45\" , \"name\" : \"210-242-214-45.HINET-IP.hinet.net\" , \"rtt\" : 2907000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 8 , \"address\" : \"210.242.214.45\" , \"name\" : \"210-242-214-45.HINET-IP.hinet.net\" , \"rtt\" : 5204000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 8 , \"address\" : \"210.242.214.45\" , \"name\" : \"210-242-214-45.HINET-IP.hinet.net\" , \"rtt\" : 5285000 , \"as_path\" : [ 3462 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 9 , \"address\" : \"1.1.1.1\" , \"name\" : \"one.one.one.one\" , \"rtt\" : 4837000 , \"as_path\" : [ 13335 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 9 , \"address\" : \"1.1.1.1\" , \"name\" : \"one.one.one.one\" , \"rtt\" : 4834000 , \"as_path\" : [ 13335 ] } } { \"target\" : \"clab-gnoi-ceos1:6030\" , \"response\" : { \"hop\" : 9 , \"address\" : \"1.1.1.1\" , \"name\" : \"one.one.one.one\" , \"rtt\" : 4873000 , \"as_path\" : [ 13335 ] } }","title":"json formatted output"},{"location":"command_reference/system/traceroute/#multiple-targets-traceroute","text":"gnoic -a clab-gnoi-ceos1:6030,clab-gnoi-ceos2:6030 --insecure -u admin -p admin \\ system traceroute \\ --destination 1 .1.1.1 [ clab-gnoi-ceos2:6030 ] Traceroute to 1 .1.1.1 ( 1 .1.1.1 ) , 30 max hops, 60 byte packet size [ clab-gnoi-ceos1:6030 ] Traceroute to 1 .1.1.1 ( 1 .1.1.1 ) , 30 max hops, 60 byte packet size [ clab-gnoi-ceos2:6030 ] 1 172 -11-11-1.lightspeed.chrlnc.sbcglobal.net ( 172 .11.11.1 ) 53\u00b5s [ clab-gnoi-ceos2:6030 ] 1 172 -11-11-1.lightspeed.chrlnc.sbcglobal.net ( 172 .11.11.1 ) 6\u00b5s [ clab-gnoi-ceos2:6030 ] 1 172 -11-11-1.lightspeed.chrlnc.sbcglobal.net ( 172 .11.11.1 ) 4\u00b5s [ clab-gnoi-ceos1:6030 ] 1 172 -11-11-1.lightspeed.chrlnc.sbcglobal.net ( 172 .11.11.1 ) 24\u00b5s [ clab-gnoi-ceos1:6030 ] 1 172 -11-11-1.lightspeed.chrlnc.sbcglobal.net ( 172 .11.11.1 ) 6\u00b5s [ clab-gnoi-ceos1:6030 ] 1 172 -11-11-1.lightspeed.chrlnc.sbcglobal.net ( 172 .11.11.1 ) 5\u00b5s [ clab-gnoi-ceos2:6030 ] 2 192 .168.1.1 ( 192 .168.1.1 ) 3 .521ms [ clab-gnoi-ceos2:6030 ] 2 192 .168.1.1 ( 192 .168.1.1 ) 3 .932ms [ clab-gnoi-ceos2:6030 ] 2 192 .168.1.1 ( 192 .168.1.1 ) 4 .284ms [ clab-gnoi-ceos1:6030 ] 2 192 .168.1.1 ( 192 .168.1.1 ) 3 .981ms [ clab-gnoi-ceos1:6030 ] 2 192 .168.1.1 ( 192 .168.1.1 ) 4 .385ms [ clab-gnoi-ceos1:6030 ] 2 192 .168.1.1 ( 192 .168.1.1 ) 4 .715ms [ clab-gnoi-ceos1:6030 ] 3 h254.s98.ts.hinet.net ( 168 .95.98.254 ) [ AS3462 ] 10 .295ms [ clab-gnoi-ceos1:6030 ] 3 h254.s98.ts.hinet.net ( 168 .95.98.254 ) [ AS3462 ] 10 .391ms [ clab-gnoi-ceos1:6030 ] 3 h254.s98.ts.hinet.net ( 168 .95.98.254 ) [ AS3462 ] 10 .487ms [ clab-gnoi-ceos2:6030 ] 3 h254.s98.ts.hinet.net ( 168 .95.98.254 ) [ AS3462 ] 10 .666ms [ clab-gnoi-ceos2:6030 ] 3 h254.s98.ts.hinet.net ( 168 .95.98.254 ) [ AS3462 ] 10 .769ms [ clab-gnoi-ceos2:6030 ] 3 h254.s98.ts.hinet.net ( 168 .95.98.254 ) [ AS3462 ] 10 .911ms [ clab-gnoi-ceos1:6030 ] 4 tpdb-3332.hinet.net ( 168 .95.83.102 ) [ AS3462 ] 6 .396ms [ clab-gnoi-ceos1:6030 ] 4 tpdb-3332.hinet.net ( 168 .95.83.102 ) [ AS3462 ] 6 .492ms [ clab-gnoi-ceos1:6030 ] 4 tpdb-3332.hinet.net ( 168 .95.83.102 ) [ AS3462 ] 6 .59ms [ clab-gnoi-ceos2:6030 ] 4 tpdb-3332.hinet.net ( 168 .95.83.102 ) [ AS3462 ] 6 .571ms [ clab-gnoi-ceos2:6030 ] 4 tpdb-3332.hinet.net ( 168 .95.83.102 ) [ AS3462 ] 6 .751ms [ clab-gnoi-ceos2:6030 ] 4 tpdb-3332.hinet.net ( 168 .95.83.102 ) [ AS3462 ] 6 .958ms [ clab-gnoi-ceos1:6030 ] 5 tpdt-3032.hinet.net ( 220 .128.4.142 ) [ AS3462 ] <MPLS:L = 24304 ,E = 0 ,S = 1 ,T = 1 > 5 .578ms [ clab-gnoi-ceos1:6030 ] 5 tpdt-3032.hinet.net ( 220 .128.4.142 ) [ AS3462 ] <MPLS:L = 24304 ,E = 0 ,S = 1 ,T = 1 > 5 .677ms [ clab-gnoi-ceos1:6030 ] 5 tpdt-3032.hinet.net ( 220 .128.4.142 ) [ AS3462 ] <MPLS:L = 24304 ,E = 0 ,S = 1 ,T = 1 > 5 .773ms [ clab-gnoi-ceos2:6030 ] 5 tpdt-3032.hinet.net ( 220 .128.4.142 ) [ AS3462 ] <MPLS:L = 24304 ,E = 0 ,S = 1 ,T = 1 > 5 .964ms [ clab-gnoi-ceos2:6030 ] 5 tpdt-3032.hinet.net ( 220 .128.4.142 ) [ AS3462 ] <MPLS:L = 24304 ,E = 0 ,S = 1 ,T = 1 > 6 .063ms [ clab-gnoi-ceos2:6030 ] 5 tpdt-3032.hinet.net ( 220 .128.4.142 ) [ AS3462 ] <MPLS:L = 24304 ,E = 0 ,S = 1 ,T = 1 > 6 .184ms [ clab-gnoi-ceos1:6030 ] 6 tpdt-3012.hinet.net ( 220 .128.25.89 ) [ AS3462 ] <MPLS:L = 24306 ,E = 0 ,S = 1 ,T = 1 > 6 .183ms [ clab-gnoi-ceos1:6030 ] 6 tpdt-3012.hinet.net ( 220 .128.25.89 ) [ AS3462 ] <MPLS:L = 24306 ,E = 0 ,S = 1 ,T = 1 > 4 .017ms [ clab-gnoi-ceos1:6030 ] 6 tpdt-3012.hinet.net ( 220 .128.25.89 ) [ AS3462 ] <MPLS:L = 24306 ,E = 0 ,S = 1 ,T = 1 > 4 .099ms [ clab-gnoi-ceos2:6030 ] 6 tpdt-3012.hinet.net ( 220 .128.25.89 ) [ AS3462 ] <MPLS:L = 24306 ,E = 0 ,S = 1 ,T = 1 > 6 .645ms [ clab-gnoi-ceos2:6030 ] 6 tpdt-3012.hinet.net ( 220 .128.25.89 ) [ AS3462 ] <MPLS:L = 24306 ,E = 0 ,S = 1 ,T = 1 > 3 .423ms [ clab-gnoi-ceos2:6030 ] 6 tpdt-3012.hinet.net ( 220 .128.25.89 ) [ AS3462 ] <MPLS:L = 24306 ,E = 0 ,S = 1 ,T = 1 > 3 .508ms [ clab-gnoi-ceos1:6030 ] 7 220 -128-4-193.HINET-IP.hinet.net ( 220 .128.4.193 ) [ AS3462 ] 3 .293ms [ clab-gnoi-ceos1:6030 ] 7 220 -128-4-193.HINET-IP.hinet.net ( 220 .128.4.193 ) [ AS3462 ] 12 .711ms [ clab-gnoi-ceos1:6030 ] 7 220 -128-4-193.HINET-IP.hinet.net ( 220 .128.4.193 ) [ AS3462 ] 12 .814ms [ clab-gnoi-ceos2:6030 ] 7 220 -128-4-193.HINET-IP.hinet.net ( 220 .128.4.193 ) [ AS3462 ] 2 .629ms [ clab-gnoi-ceos2:6030 ] 7 220 -128-4-193.HINET-IP.hinet.net ( 220 .128.4.193 ) [ AS3462 ] 3 .227ms [ clab-gnoi-ceos2:6030 ] 7 220 -128-4-193.HINET-IP.hinet.net ( 220 .128.4.193 ) [ AS3462 ] 3 .312ms [ clab-gnoi-ceos1:6030 ] 8 210 -242-214-45.HINET-IP.hinet.net ( 210 .242.214.45 ) [ AS3462 ] 4 .61ms [ clab-gnoi-ceos1:6030 ] 8 210 -242-214-45.HINET-IP.hinet.net ( 210 .242.214.45 ) [ AS3462 ] 4 .698ms [ clab-gnoi-ceos1:6030 ] 8 210 -242-214-45.HINET-IP.hinet.net ( 210 .242.214.45 ) [ AS3462 ] 4 .812ms [ clab-gnoi-ceos2:6030 ] 8 210 -242-214-45.HINET-IP.hinet.net ( 210 .242.214.45 ) [ AS3462 ] 4 .18ms [ clab-gnoi-ceos2:6030 ] 8 210 -242-214-45.HINET-IP.hinet.net ( 210 .242.214.45 ) [ AS3462 ] 4 .222ms [ clab-gnoi-ceos2:6030 ] 8 210 -242-214-45.HINET-IP.hinet.net ( 210 .242.214.45 ) [ AS3462 ] 4 .516ms [ clab-gnoi-ceos2:6030 ] 9 one.one.one.one ( 1 .1.1.1 ) [ AS13335 ] 3 .619ms [ clab-gnoi-ceos2:6030 ] 9 one.one.one.one ( 1 .1.1.1 ) [ AS13335 ] 3 .86ms [ clab-gnoi-ceos2:6030 ] 9 one.one.one.one ( 1 .1.1.1 ) [ AS13335 ] 3 .935ms [ clab-gnoi-ceos1:6030 ] 9 one.one.one.one ( 1 .1.1.1 ) [ AS13335 ] 4 .375ms [ clab-gnoi-ceos1:6030 ] 9 one.one.one.one ( 1 .1.1.1 ) [ AS13335 ] 4 .259ms [ clab-gnoi-ceos1:6030 ] 9 No Response","title":"multiple targets traceroute"},{"location":"command_reference/tree/tree/","text":"Tree # Description # The tree command is a convenient method to display gNOIc 's command tree. It takes a couple of flags: flat : display full commands instead of a tree details : display flags together with the command tree Both flags cannot be combined. Usage # gnoic tree [local-flags] Flags # flat # If present, gNOIc displays a list of commands rather than a tree. details # if present, gNOIc displays each command flags as part of the tree. Examples # gnoic tree gnoic \u251c\u2500\u2500\u2500 cert \u2502 \u251c\u2500\u2500\u2500 can-generate-csr \u2502 \u251c\u2500\u2500\u2500 create-ca \u2502 \u251c\u2500\u2500\u2500 generate-csr \u2502 \u251c\u2500\u2500\u2500 get-certs \u2502 \u251c\u2500\u2500\u2500 install \u2502 \u251c\u2500\u2500\u2500 load \u2502 \u251c\u2500\u2500\u2500 load-ca \u2502 \u251c\u2500\u2500\u2500 revoke \u2502 \u2514\u2500\u2500\u2500 rotate \u251c\u2500\u2500\u2500 file \u2502 \u251c\u2500\u2500\u2500 get \u2502 \u251c\u2500\u2500\u2500 put \u2502 \u251c\u2500\u2500\u2500 remove \u2502 \u251c\u2500\u2500\u2500 stat \u2502 \u2514\u2500\u2500\u2500 transfer \u251c\u2500\u2500\u2500 help [command] \u251c\u2500\u2500\u2500 system \u2502 \u251c\u2500\u2500\u2500 cancel-reboot \u2502 \u251c\u2500\u2500\u2500 ping \u2502 \u251c\u2500\u2500\u2500 reboot \u2502 \u251c\u2500\u2500\u2500 reboot-status \u2502 \u251c\u2500\u2500\u2500 set-package \u2502 \u251c\u2500\u2500\u2500 switch-control-processor \u2502 \u251c\u2500\u2500\u2500 time \u2502 \u2514\u2500\u2500\u2500 traceroute \u251c\u2500\u2500\u2500 tree \u2514\u2500\u2500\u2500 version gnoic tree --flat gnoic gnoic cert gnoic cert can-generate-csr gnoic cert create-ca gnoic cert generate-csr gnoic cert get-certs gnoic cert install gnoic cert load gnoic cert load-ca gnoic cert revoke gnoic cert rotate gnoic file gnoic file get gnoic file put gnoic file remove gnoic file stat gnoic file transfer gnoic help [command] gnoic system gnoic system cancel-reboot gnoic system ping gnoic system reboot gnoic system reboot-status gnoic system set-package gnoic system switch-control-processor gnoic system time gnoic system traceroute gnoic tree gnoic version gnoic tree --details gnoic \u251c\u2500\u2500\u2500 cert \u2502 \u251c\u2500\u2500\u2500 can-generate-csr [--cert-type] [--key-size] [--key-type] \u2502 \u251c\u2500\u2500\u2500 create-ca [--cert-out] [--common-name] [--country] [--email] [--key-out] [--key-size] [--locality] [--org] [--org-unit] [--postal-code] [--state] [--street-address] [--validity] \u2502 \u251c\u2500\u2500\u2500 generate-csr [--cert-type] [--city] [--common-name] [--country] [--email-id] [--id] [--ip-address] [--key-type] [--min-key-size] [--org] [--org-unit] [--state] \u2502 \u251c\u2500\u2500\u2500 get-certs [--details] [--id] [--save] \u2502 \u251c\u2500\u2500\u2500 install [--cert-type] [--city] [--common-name] [--country] [--email-id] [--id] [--ip-address] [--key-type] [--min-key-size] [--org] [--org-unit] [--print-csr] [--state] [--validity] \u2502 \u251c\u2500\u2500\u2500 load \u2502 \u251c\u2500\u2500\u2500 load-ca \u2502 \u251c\u2500\u2500\u2500 revoke [--all] [--id] \u2502 \u2514\u2500\u2500\u2500 rotate [--cert-type] [--city] [--common-name] [--country] [--email-id] [--id] [--ip-address] [--key-type] [--min-key-size] [--org] [--org-unit] [--print-csr] [--state] [--validity] \u251c\u2500\u2500\u2500 file \u2502 \u251c\u2500\u2500\u2500 get [--file] [--local-file] [--target-prefix] \u2502 \u251c\u2500\u2500\u2500 put [--chunk-size] [--file] [--hash-method] [--permission] [--remote-name] \u2502 \u251c\u2500\u2500\u2500 remove [--file] \u2502 \u251c\u2500\u2500\u2500 stat [--file] [--humanize] \u2502 \u2514\u2500\u2500\u2500 transfer \u251c\u2500\u2500\u2500 help [command] \u251c\u2500\u2500\u2500 system \u2502 \u251c\u2500\u2500\u2500 cancel-reboot [--message] [--subcomponent] \u2502 \u251c\u2500\u2500\u2500 ping [--count] [--destination] [--do-not-fragment] [--do-not-resolve] [--interval] [--protocol] [--size] [--source] [--wait] \u2502 \u251c\u2500\u2500\u2500 reboot [--delay] [--force] [--message] [--method] [--subcomponent] \u2502 \u251c\u2500\u2500\u2500 reboot-status [--subcomponent] \u2502 \u251c\u2500\u2500\u2500 set-package \u2502 \u251c\u2500\u2500\u2500 switch-control-processor [--path] \u2502 \u251c\u2500\u2500\u2500 time \u2502 \u2514\u2500\u2500\u2500 traceroute [--destination] [--do-not-fragment] [--do-not-resolve] [--initial-ttl] [--interval] [-3 | --l3protocol] [-4 | --l4protocol] [--max-ttl] [--size] [--source] [--wait] \u251c\u2500\u2500\u2500 tree [--details] [--flat] [-h | --help] \u2514\u2500\u2500\u2500 version","title":"Tree"},{"location":"command_reference/tree/tree/#tree","text":"","title":"Tree"},{"location":"command_reference/tree/tree/#description","text":"The tree command is a convenient method to display gNOIc 's command tree. It takes a couple of flags: flat : display full commands instead of a tree details : display flags together with the command tree Both flags cannot be combined.","title":"Description"},{"location":"command_reference/tree/tree/#usage","text":"gnoic tree [local-flags]","title":"Usage"},{"location":"command_reference/tree/tree/#flags","text":"","title":"Flags"},{"location":"command_reference/tree/tree/#flat","text":"If present, gNOIc displays a list of commands rather than a tree.","title":"flat"},{"location":"command_reference/tree/tree/#details","text":"if present, gNOIc displays each command flags as part of the tree.","title":"details"},{"location":"command_reference/tree/tree/#examples","text":"gnoic tree gnoic \u251c\u2500\u2500\u2500 cert \u2502 \u251c\u2500\u2500\u2500 can-generate-csr \u2502 \u251c\u2500\u2500\u2500 create-ca \u2502 \u251c\u2500\u2500\u2500 generate-csr \u2502 \u251c\u2500\u2500\u2500 get-certs \u2502 \u251c\u2500\u2500\u2500 install \u2502 \u251c\u2500\u2500\u2500 load \u2502 \u251c\u2500\u2500\u2500 load-ca \u2502 \u251c\u2500\u2500\u2500 revoke \u2502 \u2514\u2500\u2500\u2500 rotate \u251c\u2500\u2500\u2500 file \u2502 \u251c\u2500\u2500\u2500 get \u2502 \u251c\u2500\u2500\u2500 put \u2502 \u251c\u2500\u2500\u2500 remove \u2502 \u251c\u2500\u2500\u2500 stat \u2502 \u2514\u2500\u2500\u2500 transfer \u251c\u2500\u2500\u2500 help [command] \u251c\u2500\u2500\u2500 system \u2502 \u251c\u2500\u2500\u2500 cancel-reboot \u2502 \u251c\u2500\u2500\u2500 ping \u2502 \u251c\u2500\u2500\u2500 reboot \u2502 \u251c\u2500\u2500\u2500 reboot-status \u2502 \u251c\u2500\u2500\u2500 set-package \u2502 \u251c\u2500\u2500\u2500 switch-control-processor \u2502 \u251c\u2500\u2500\u2500 time \u2502 \u2514\u2500\u2500\u2500 traceroute \u251c\u2500\u2500\u2500 tree \u2514\u2500\u2500\u2500 version gnoic tree --flat gnoic gnoic cert gnoic cert can-generate-csr gnoic cert create-ca gnoic cert generate-csr gnoic cert get-certs gnoic cert install gnoic cert load gnoic cert load-ca gnoic cert revoke gnoic cert rotate gnoic file gnoic file get gnoic file put gnoic file remove gnoic file stat gnoic file transfer gnoic help [command] gnoic system gnoic system cancel-reboot gnoic system ping gnoic system reboot gnoic system reboot-status gnoic system set-package gnoic system switch-control-processor gnoic system time gnoic system traceroute gnoic tree gnoic version gnoic tree --details gnoic \u251c\u2500\u2500\u2500 cert \u2502 \u251c\u2500\u2500\u2500 can-generate-csr [--cert-type] [--key-size] [--key-type] \u2502 \u251c\u2500\u2500\u2500 create-ca [--cert-out] [--common-name] [--country] [--email] [--key-out] [--key-size] [--locality] [--org] [--org-unit] [--postal-code] [--state] [--street-address] [--validity] \u2502 \u251c\u2500\u2500\u2500 generate-csr [--cert-type] [--city] [--common-name] [--country] [--email-id] [--id] [--ip-address] [--key-type] [--min-key-size] [--org] [--org-unit] [--state] \u2502 \u251c\u2500\u2500\u2500 get-certs [--details] [--id] [--save] \u2502 \u251c\u2500\u2500\u2500 install [--cert-type] [--city] [--common-name] [--country] [--email-id] [--id] [--ip-address] [--key-type] [--min-key-size] [--org] [--org-unit] [--print-csr] [--state] [--validity] \u2502 \u251c\u2500\u2500\u2500 load \u2502 \u251c\u2500\u2500\u2500 load-ca \u2502 \u251c\u2500\u2500\u2500 revoke [--all] [--id] \u2502 \u2514\u2500\u2500\u2500 rotate [--cert-type] [--city] [--common-name] [--country] [--email-id] [--id] [--ip-address] [--key-type] [--min-key-size] [--org] [--org-unit] [--print-csr] [--state] [--validity] \u251c\u2500\u2500\u2500 file \u2502 \u251c\u2500\u2500\u2500 get [--file] [--local-file] [--target-prefix] \u2502 \u251c\u2500\u2500\u2500 put [--chunk-size] [--file] [--hash-method] [--permission] [--remote-name] \u2502 \u251c\u2500\u2500\u2500 remove [--file] \u2502 \u251c\u2500\u2500\u2500 stat [--file] [--humanize] \u2502 \u2514\u2500\u2500\u2500 transfer \u251c\u2500\u2500\u2500 help [command] \u251c\u2500\u2500\u2500 system \u2502 \u251c\u2500\u2500\u2500 cancel-reboot [--message] [--subcomponent] \u2502 \u251c\u2500\u2500\u2500 ping [--count] [--destination] [--do-not-fragment] [--do-not-resolve] [--interval] [--protocol] [--size] [--source] [--wait] \u2502 \u251c\u2500\u2500\u2500 reboot [--delay] [--force] [--message] [--method] [--subcomponent] \u2502 \u251c\u2500\u2500\u2500 reboot-status [--subcomponent] \u2502 \u251c\u2500\u2500\u2500 set-package \u2502 \u251c\u2500\u2500\u2500 switch-control-processor [--path] \u2502 \u251c\u2500\u2500\u2500 time \u2502 \u2514\u2500\u2500\u2500 traceroute [--destination] [--do-not-fragment] [--do-not-resolve] [--initial-ttl] [--interval] [-3 | --l3protocol] [-4 | --l4protocol] [--max-ttl] [--size] [--source] [--wait] \u251c\u2500\u2500\u2500 tree [--details] [--flat] [-h | --help] \u2514\u2500\u2500\u2500 version","title":"Examples"}]}